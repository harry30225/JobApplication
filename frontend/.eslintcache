[{"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/index.js":"1","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/App.js":"2","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/layout/Navbar.js":"3","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/layout/Landing.js":"4","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/auth/Login.js":"5","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/auth/Register.js":"6","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/store.js":"7","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/reducers/index.js":"8","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/reducers/alert.js":"9","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/actions/types.js":"10","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/actions/alert.js":"11","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/layout/Alert.js":"12","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/reducers/auth.js":"13","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/actions/auth.js":"14","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/utils/setAuthToken.js":"15","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/layout/Spinner.js":"16","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/routing/PrivateRoute.js":"17","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/dashboard/Dashboard.js":"18","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/recruiter/Recruiter.js":"19","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/applicant/Applicant.js":"20","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/actions/rprofile.js":"21","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/reducers/rprofile.js":"22","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/forms/CreateRprofile.js":"23","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/forms/CreateAprofile.js":"24","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/actions/aprofile.js":"25","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/reducers/aprofile.js":"26","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/forms/AddEducation.js":"27","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/applicant/JobListing.js":"28","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/forms/EditAprofile.js":"29","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/forms/AddJob.js":"30","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/actions/job.js":"31","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/reducers/job.js":"32","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/layout/SearchFeature.js":"33","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/layout/SortFeature.js":"34","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/layout/FilterFeature.js":"35","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/forms/ApplyJob.js":"36","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/applicant/MyApplications.js":"37","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/recruiter/RecJobListing.js":"38","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/forms/EditJob.js":"39","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/recruiter/JobApplicants.js":"40","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/recruiter/SortFeatureApplicant.js":"41","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/recruiter/SelectedApplicants.js":"42","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/recruiter/RateApplicant.js":"43","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/applicant/RateJob.js":"44","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/recruiter/SortSelected.js":"45"},{"size":154,"mtime":1610261503198,"results":"46","hashOfConfig":"47"},{"size":3208,"mtime":1611476953342,"results":"48","hashOfConfig":"47"},{"size":1855,"mtime":1610426462189,"results":"49","hashOfConfig":"47"},{"size":741,"mtime":1611085630237,"results":"50","hashOfConfig":"47"},{"size":1973,"mtime":1610355904255,"results":"51","hashOfConfig":"47"},{"size":3287,"mtime":1610355558249,"results":"52","hashOfConfig":"47"},{"size":386,"mtime":1610303971007,"results":"53","hashOfConfig":"47"},{"size":286,"mtime":1610733464194,"results":"54","hashOfConfig":"47"},{"size":420,"mtime":1610304319723,"results":"55","hashOfConfig":"47"},{"size":1202,"mtime":1611597460594,"results":"56","hashOfConfig":"47"},{"size":354,"mtime":1610304443158,"results":"57","hashOfConfig":"47"},{"size":476,"mtime":1610305097462,"results":"58","hashOfConfig":"47"},{"size":1255,"mtime":1610357244315,"results":"59","hashOfConfig":"47"},{"size":2391,"mtime":1610904893036,"results":"60","hashOfConfig":"47"},{"size":252,"mtime":1610345033463,"results":"61","hashOfConfig":"47"},{"size":290,"mtime":1608320888871,"results":"62","hashOfConfig":"47"},{"size":580,"mtime":1610425252511,"results":"63","hashOfConfig":"47"},{"size":863,"mtime":1610425648566,"results":"64","hashOfConfig":"47"},{"size":2502,"mtime":1611578712911,"results":"65","hashOfConfig":"47"},{"size":4017,"mtime":1611563068088,"results":"66","hashOfConfig":"47"},{"size":1698,"mtime":1610602354215,"results":"67","hashOfConfig":"47"},{"size":806,"mtime":1610602731702,"results":"68","hashOfConfig":"47"},{"size":1737,"mtime":1611155513944,"results":"69","hashOfConfig":"47"},{"size":2101,"mtime":1610642481518,"results":"70","hashOfConfig":"47"},{"size":7160,"mtime":1611597529586,"results":"71","hashOfConfig":"47"},{"size":4078,"mtime":1611600562685,"results":"72","hashOfConfig":"47"},{"size":3061,"mtime":1610690900033,"results":"73","hashOfConfig":"47"},{"size":5129,"mtime":1611579514856,"results":"74","hashOfConfig":"47"},{"size":2566,"mtime":1610642529517,"results":"75","hashOfConfig":"47"},{"size":4262,"mtime":1611254961657,"results":"76","hashOfConfig":"47"},{"size":7196,"mtime":1611585883202,"results":"77","hashOfConfig":"47"},{"size":3569,"mtime":1611585923578,"results":"78","hashOfConfig":"47"},{"size":1183,"mtime":1610991666224,"results":"79","hashOfConfig":"47"},{"size":2646,"mtime":1611085583950,"results":"80","hashOfConfig":"47"},{"size":4855,"mtime":1611085386721,"results":"81","hashOfConfig":"47"},{"size":1290,"mtime":1611162960173,"results":"82","hashOfConfig":"47"},{"size":3614,"mtime":1611563124461,"results":"83","hashOfConfig":"47"},{"size":2587,"mtime":1611391527561,"results":"84","hashOfConfig":"47"},{"size":2230,"mtime":1611254964974,"results":"85","hashOfConfig":"47"},{"size":6753,"mtime":1611410282763,"results":"86","hashOfConfig":"47"},{"size":2764,"mtime":1611581423142,"results":"87","hashOfConfig":"47"},{"size":2443,"mtime":1611600920248,"results":"88","hashOfConfig":"47"},{"size":2661,"mtime":1611600936908,"results":"89","hashOfConfig":"47"},{"size":2597,"mtime":1611585611052,"results":"90","hashOfConfig":"47"},{"size":2708,"mtime":1611600984883,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"khvnyf",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"94"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"94"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"94"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"94"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"94"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"94"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"94"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"94"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"94"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"94"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"94"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"94"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"94"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"94"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"94"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/index.js",[],["198","199"],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/App.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/layout/Navbar.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/layout/Landing.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/auth/Login.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/auth/Register.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/store.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/reducers/index.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/reducers/alert.js",["200"],"import {\n    SET_ALERT,\n    REMOVE_ALERT\n} from '../actions/types';\n\nconst initialState = [];\n\nexport default function (state = initialState, action) {\n\n    const { type, payload } = action;\n\n    switch (type) {\n        case SET_ALERT:\n            return [...state, payload];\n\n        case REMOVE_ALERT:\n            return state.filter(alert => alert.id !== payload);\n\n        default:\n            return state;\n    }\n};","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/actions/types.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/actions/alert.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/layout/Alert.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/reducers/auth.js",["201"],"import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT\n} from '../actions/types';\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null\n};\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action;\n    switch (type) {\n        case REGISTER_SUCCESS:\n        case LOGIN_SUCCESS:\n            localStorage.setItem('token', payload.token)\n            return {\n                ...state,\n                ...payload,\n                isAuthenticated: true,\n                loading: false\n            };\n\n        case USER_LOADED:\n            return {\n                ...state,\n                user: payload,\n                loading: false,\n                isAuthenticated: true\n            };\n\n        case REGISTER_FAIL:\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n        case LOGOUT:\n            localStorage.removeItem('token')\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false,\n                loading: false,\n                user: null\n            };\n\n        default:\n            return state;\n    }\n}\n","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/actions/auth.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/utils/setAuthToken.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/layout/Spinner.js",["202"],"import React, { Fragment } from 'react';\nimport spinner from './spinner.gif';\n\n\nexport default () => (\n    <Fragment>\n        <img\n            src={spinner}\n            style={{ width: '200px', margin: 'auto', display: 'block' }}\n            alt='Loading ...'\n        />\n    </Fragment>\n);\n","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/routing/PrivateRoute.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/dashboard/Dashboard.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/recruiter/Recruiter.js",["203"],"import React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getCurrentProfile } from '../../actions/rprofile';\nimport Spinner from '../layout/Spinner';\n\nconst Recruiter = ({ getCurrentProfile, rprofile: { loading, rprofile }, auth: { user } }) => {\n    useEffect(() => {\n        getCurrentProfile();\n    }, []);\n    return loading && rprofile === null ? (\n        <Spinner />\n    ) : (\n            <Fragment>\n                <h1>Dashboard</h1>\n                <p><i className=\"fa fa-user\"></i>Welcome {user && user.name}</p>\n                {rprofile === null ? (\n                    <Fragment>\n                        <p>Kindly complete your profile</p>\n                        <Link to=\"/create-rprofile\" className=\"btn btn-info\">\n                            <i className=\"fa fa-user\"></i> Create Profile\n                        </Link>\n                    </Fragment>\n                ) : (\n                        <Fragment>\n                            <Link to=\"/create-rprofile\" className=\"btn btn-info m-2\">\n                                <i className=\"fa fa-user\"></i> Edit Profile\n                        </Link>\n                            <Link to=\"/add-job\" className=\"btn btn-danger m-2\">\n                                <i className=\"fa fa-briefcase\"></i> Add a Job\n                            </Link>\n                            <Link to=\"/rec-job-listing\" className=\"btn btn-primary m-2\">\n                                <i className=\"fa fa-folder\"></i> Jobs and Applications\n                            </Link>\n                            <Link to=\"/selected-applicants\" className=\"btn btn-dark m-2\">\n                                <i className=\"fa fa-envelope\"></i> Selected Applicants\n                            </Link>\n                            <p className=\"m-2\"><i className=\"fa fa-info\"> Contact No. : {rprofile.contactno}</i></p>\n                            <p className=\"m-2\"><i className=\"fa fa-info\"></i> Bio : {rprofile.bio}</p>\n                        </Fragment>\n                    )}\n            </Fragment>\n        )\n};\n\nRecruiter.propTypes = {\n    getCurrentProfile: PropTypes.func.isRequired,\n    rprofile: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    rprofile: state.rprofile,\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile })(Recruiter);\n","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/applicant/Applicant.js",["204"],"import React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getCurrentProfile } from '../../actions/aprofile';\nimport Spinner from '../layout/Spinner';\nimport Moment from 'react-moment';\n\nconst Applicant = ({ getCurrentProfile, aprofile: { aprofile, loading }, auth: { user } }) => {\n    useEffect(() => {\n        getCurrentProfile();\n    }, []);\n    return loading && aprofile === null ? (\n        <Spinner />\n    ) : (\n            <Fragment>\n                <h1>Dashboard</h1>\n                <p><i className=\"fa fa-user\"></i>Welcome {user && user.name}</p>\n                {aprofile === null ? (\n                    <Fragment>\n                        <p>Kindly complete your profile</p>\n                        <Link to=\"/create-aprofile\" className=\"btn btn-info\">\n                            Create Profile <i className=\"fa fa-black-tie\"></i>\n                        </Link>\n                    </Fragment>\n                ) : (\n                        <Fragment>\n                            <Link to=\"/edit-aprofile\" className=\"btn btn-info mb-2 mr-3\">\n                                Edit Profile <i className=\"fa fa-black-tie\"></i>\n                            </Link>\n                            <Link to=\"/add-education\" className=\"btn btn-warning mb-2 mr-3\">\n                                Add Education <i className=\"fa fa-university\"></i>\n                            </Link>\n                            <Link to=\"/job-listing\" className=\"btn btn-danger mb-2 mr-3\">\n                                Job Listing <i className=\"fa fa-briefcase\"></i>\n                            </Link>\n                            <Link to=\"/my-application\" className=\"btn btn-dark mb-2 mr-3\">\n                                My Applications <i className=\"fa fa-envelope\"></i>\n                            </Link>\n\n                            <h2>Skills</h2>\n                            <ul>\n                                {aprofile.skills.length > 0 ? (\n                                    <Fragment>\n                                        {aprofile.skills.map(skill => (\n                                            <li><i className=\"fa fa-thumbs-up\"></i> {skill}</li>\n                                        ))}\n                                    </Fragment>\n                                ) : (<Fragment></Fragment>)}\n\n                            </ul>\n                            {aprofile.education.length > 0 ? (\n                                <Fragment>\n                                    <h2>Education</h2>\n                                    {aprofile.education.map(edu => (<Fragment>\n                                        <div>\n                                            <i className=\"fa fa-university\"></i>\n                                            <p> <i className=\"fa fa-book\"></i>Studied at {edu.school}</p>\n                                            <p><i className=\"fa fa-book\"></i>{edu.fieldofstudy}</p>\n                                            <p><i className=\"fa fa-book\"></i> From <Moment format=\"YYYY/MM/DD\">{edu.from}</Moment> -\n                                    {edu.to === null ? ('Current') : (<Moment format=\"YYYY/MM/DD\">{edu.to}</Moment>)}\n                                            </p>\n                                        </div>\n                                    </Fragment>\n                                    ))}\n                                </Fragment>\n                            ) : (<Fragment></Fragment>)}\n                        </Fragment>\n                    )\n                }\n            </Fragment >\n        )\n};\n\nApplicant.propTypes = {\n    getCurrentProfile: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    aprofile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    aprofile: state.aprofile\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile })(Applicant);\n","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/actions/rprofile.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/reducers/rprofile.js",["205"],"import {\n    GET_RPROFILE,\n    RPROFILE_ERROR,\n    CLEAR_RPROFILE\n} from '../actions/types';\n\nconst initialState = {\n    rprofile: null,\n    errors: {},\n    loading: true\n};\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action\n    switch (type) {\n\n        case GET_RPROFILE:\n            return {\n                ...state,\n                rprofile: payload,\n                loading: false\n            };\n\n        case CLEAR_RPROFILE:\n            return {\n                ...state,\n                rprofile: null,\n                loading: false\n            };\n\n        case RPROFILE_ERROR:\n            return {\n                ...state,\n                errors: payload,\n                loading: false\n            }\n\n        default:\n            return state;\n    }\n}","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/forms/CreateRprofile.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/forms/CreateAprofile.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/actions/aprofile.js",["206"],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/reducers/aprofile.js",["207","208","209"],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/forms/AddEducation.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/applicant/JobListing.js",["210"],"import React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { getJobs } from '../../actions/job';\nimport { setAlert } from '../../actions/alert';\nimport Spinner from '../layout/Spinner';\nimport SearchFeature from '../layout/SearchFeature';\nimport SortFeature from '../layout/SortFeature';\nimport FilterFeature from '../layout/FilterFeature';\n\nconst JobListing = ({ getJobs, setAlert, job: { loading, jobs }, aprofile: { aprofile } }) => {\n    useEffect(() => {\n        getJobs();\n    }, []);\n\n    return (\n        <Fragment>\n            {loading ? (\n                <Fragment>\n                    <Spinner />\n                </Fragment>\n            ) : (\n                    <Fragment>\n                        <Link onClick={getJobs} to='/job-listing' className=\"btn btn-primary m-2\"><i className=\"fa fa-tag\"></i> Job Listing</Link>\n                        <h1>Job Listing</h1>\n                        <SearchFeature />\n                        <SortFeature />\n                        <FilterFeature />\n                        {jobs.length > 0 ? (\n                            <Fragment>\n                                {jobs.map(job => (\n                                    <div className=\"container bg-light m-1 border border-success\">\n                                        <h3 className=\"job-title\">{job.title}</h3>\n                                        <p className=\"m-0\">Recruiter Name : {job.user.name}</p>\n                                        <p className=\"m-0\">Rating : {job.rating}</p>\n                                        <p className=\"m-0\">Salary : {job.salary}</p>\n                                        <p className=\"m-0\">Type Of Job : {job.typeofjob}</p>\n                                        <p className=\"m-0\"> Duration : {job.duration === '0' ? (<span>Indefinite</span>) : (<span>{job.duration} Month</span>)}</p>\n                                        <p className=\"m-0\">Deadline : <Moment format=\"YYYY/MM/DD\">{job.deadline}</Moment></p>\n                                        {parseInt(job.maxap.application) <= job.applications.filter(app => app.reject === false).length || parseInt(job.maxap.position) <= job.applications.filter(app => app.accepted === true).length ? (\n                                            <Fragment>\n                                                <Link className=\"btn btn-danger m-1\">Full</Link>\n                                            </Fragment>\n                                        ) : (\n                                                <Fragment>\n                                                    {aprofile.applications.findIndex(app => app.job === job._id) === -1 ? (\n                                                        <Fragment>\n                                                            {aprofile.applications.filter(app => app.rejected === false).length >= 10 ? (\n                                                                <Fragment>\n                                                                    <Link onClick={() => setAlert('Can not apply for more than 10 Applications', 'danger')} className=\"btn btn-primary m-1\"> Apply </Link>\n                                                                </Fragment>\n                                                            ) : (\n                                                                    <Fragment>\n                                                                        <Link to={`/apply-job/${job._id}`} className=\"btn btn-primary m-1\"> Apply</Link>\n                                                                    </Fragment>\n                                                                )}\n                                                        </Fragment>\n                                                    ) : (\n                                                            <Fragment>\n                                                                <Link className=\"btn btn-warning m-1\">Applied</Link>\n                                                            </Fragment>\n                                                        )}\n                                                </Fragment>\n                                            )}\n                                    </div>\n                                ))}\n                            </Fragment>\n                        ) : (\n                                <Fragment>\n                                    <h2>No Jobs Available</h2>\n                                </Fragment>\n                            )}\n                    </Fragment>\n                )\n            }\n        </Fragment>\n\n    )\n};\n\nJobListing.propTypes = {\n    getJobs: PropTypes.func.isRequired,\n    setAlert: PropTypes.func.isRequired,\n    job: PropTypes.object.isRequired,\n    aprofile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    job: state.job,\n    aprofile: state.aprofile\n});\n\nexport default connect(mapStateToProps, { getJobs, setAlert })(JobListing);\n","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/forms/EditAprofile.js",["211"],"import React, { useState, Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createProfile, getCurrentProfile } from '../../actions/aprofile';\n\n\nconst EditAprofile = ({ aprofile: { aprofile, loading }, getCurrentProfile, createProfile, history }) => {\n    const [formData, setFormData] = useState({\n        skills: '',\n    });\n\n    useEffect(() => {\n        getCurrentProfile();\n\n        setFormData({\n            skills: loading || !aprofile.skills ? '' : aprofile.skills.join(',')\n        });\n    }, [loading, getCurrentProfile]);\n\n    const { skills } = formData;\n\n    const onChange = e => setFormData({\n        ...formData,\n        [e.target.name]: e.target.value\n    });\n    const onSubmit = async e => {\n        e.preventDefault();\n        console.log(formData);\n        createProfile(formData, history);\n    };\n\n    return (\n        <Fragment>\n            <h1> Edit Profile</h1>\n            <p>Add more Skills</p>\n            <h3>Skills</h3>\n            <u>\n                <li><i className=\"fa fa-tag\">JavaScript</i></li>\n                <li><i className=\"fa fa-tag\">Python</i></li>\n                <li><i className=\"fa fa-tag\">React</i></li>\n                <li><i className=\"fa fa-tag\">MongoDb</i></li>\n                <li><i className=\"fa fa-tag\">CSS</i></li>\n                <li><i className=\"fa fa-tag\">DotNet</i></li>\n                <li><i className=\"fa fa-tag\">Angular</i></li>\n                <li><i className=\"fa fa-tag\">Select from these or add your more skills</i></li>\n            </u>\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)} />\n                    <small>Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n            </small>\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary m-1\" value=\"EditProfile\" />\n                <Link className=\"btn btn-light m-1\" to=\"/dashboard\">Go Back</Link>\n            </form>\n        </Fragment>\n    )\n};\n\nEditAprofile.propTypes = {\n    createProfile: PropTypes.func.isRequired,\n    getCurrentProfile: PropTypes.func.isRequired,\n    aprofile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    aprofile: state.aprofile\n});\n\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(withRouter(EditAprofile));\n","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/forms/AddJob.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/actions/job.js",["212"],"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { addMyapplication } from './aprofile';\n\nimport {\n    GET_JOBS,\n    JOB_ERROR,\n    CLEAR_JOBS,\n    SEARCH_JOBS,\n    SORT_JOBS,\n    FILTER_JOBS,\n    APPLY_JOB,\n    EDIT_JOB,\n    DELETE_JOB,\n    GET_JOB,\n} from './types';\n\n// get all jobs\nexport const getJobs = () => async dispatch => {\n    try {\n        const res = await axios.get('/api/job');\n        dispatch({\n            type: GET_JOBS,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: JOB_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        })\n    }\n};\n\n// get Job by Id\nexport const getJobById = (id) => async dispatch => {\n    try {\n        const res = await axios.get(`/api/job/${id}`);\n        dispatch({\n            type: GET_JOB,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: JOB_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        })\n    }\n};\n\n// get applied jobs\nexport const getAppliedJobs = () => async dispatch => {\n    try {\n        const res = await axios.get('/api/job/myapplications');\n        dispatch({\n            type: GET_JOBS,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: JOB_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        })\n    }\n};\n\n// get jobs made by recruiters\nexport const getMadeJobs = () => async dispatch => {\n    try {\n        const res = await axios.get('/api/job/recruiter');\n        dispatch({\n            type: GET_JOBS,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: JOB_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        })\n    }\n}\n\n// add a job\nexport const addJob = (formData, history) => async dispatch => {\n    const config = {\n        'headers': {\n            'Content-Type': 'application/json',\n        }\n    };\n    try {\n        const res = await axios.post('/api/job', formData, config);\n        dispatch({\n            type: GET_JOBS,\n            payload: res.data\n        });\n        dispatch(setAlert(\"Job Added\", \"success\"));\n\n        history.push('/dashboard');\n\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n        dispatch({\n            type: JOB_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// clear jobs\nexport const clearJobs = () => async dispatch => {\n    try {\n        dispatch({\n            type: CLEAR_JOBS\n        });\n    } catch (err) {\n        dispatch({\n            type: JOB_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n}\n\n// search based on job title\nexport const searchTitle = (search) => async dispatch => {\n    try {\n        //dispatch(getJobs());\n        const res = await axios.get('/api/job');\n        dispatch({\n            type: SEARCH_JOBS,\n            payload: { jobs: res.data, search }\n        })\n    } catch (err) {\n        dispatch({\n            type: JOB_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n}\n\n// sort jobs\nexport const sortJobs = (sort) => async dispatch => {\n    const sortArray = sort.split(' ');\n\n    try {\n        dispatch({\n            type: SORT_JOBS,\n            payload: { att: sortArray[0], n: parseInt(sortArray[1]) }\n        })\n    } catch (err) {\n        // console.log(err);\n        dispatch({\n            type: JOB_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n}\n\n// filter jobs\nexport const filterJobs = (formData) => async dispatch => {\n    const { typeofjob, usalary, lsalary, duration } = formData;\n    try {\n        dispatch({\n            type: FILTER_JOBS,\n            payload: { typeofjob, usalary, lsalary, duration }\n        });\n    } catch (err) {\n        dispatch({\n            type: JOB_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n}\n\n// apply job\nexport const applyJob = (id, sop, history) => async dispatch => {\n    const config = {\n        'headers': {\n            'Content-Type': 'application/json',\n        }\n    };\n    const body = JSON.stringify({ sop });\n    try {\n        const res = await axios.put(`/api/job/applications/${id}`, body, config);\n        dispatch({\n            type: APPLY_JOB,\n            payload: { id, applications: res.data }\n        })\n        dispatch(addMyapplication(id, sop));\n        history.push('/dashboard');\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n        dispatch({\n            type: JOB_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n}\n\n// edit job\nexport const editJob = (id, formData, history) => async dispatch => {\n    const config = {\n        'headers': {\n            'Content-Type': 'application/json',\n        }\n    };\n    try {\n        const res = await axios.put(`/api/job/edit/${id}`, formData, config);\n        dispatch({\n            type: EDIT_JOB,\n            payload: { id, job: res.data }\n        });\n        dispatch(setAlert(\"Job Edit\", \"success\"));\n\n        history.push('/dashboard');\n\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n        dispatch({\n            type: JOB_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// delete a job\nexport const deleteJob = (id) => async dispatch => {\n    try {\n        await axios.delete(`/api/job/delete/${id}`);\n        dispatch({\n            type: DELETE_JOB,\n            payload: id\n        })\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n        dispatch({\n            type: JOB_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// rate job\n\nexport const rateJob = (rate, id) => async dispatch => {\n    const config = {\n        'headers': {\n            'Content-Type': 'application/json',\n        }\n    };\n    const body = JSON.stringify({ rate });\n    try {\n        const res = await axios.put(`/api/job/rate/${id}`, body, config);\n        dispatch(getAppliedJobs());\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n        dispatch({\n            type: JOB_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/reducers/job.js",["213","214"],"import {\n    GET_JOBS,\n    JOB_ERROR,\n    CLEAR_JOBS,\n    SEARCH_JOBS,\n    SORT_JOBS,\n    FILTER_JOBS,\n    APPLY_JOB,\n    EDIT_JOB,\n    DELETE_JOB,\n    GET_JOB\n} from '../actions/types';\n\nconst initialState = {\n    job: null,\n    jobs: [],\n    loading: true,\n    error: {}\n};\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action;\n    switch (type) {\n        case GET_JOBS:\n            return {\n                ...state,\n                jobs: payload,\n                loading: false\n            };\n\n        case GET_JOB:\n            return {\n                ...state,\n                job: payload,\n                loading: false\n            };\n\n        case CLEAR_JOBS:\n            return {\n                ...state,\n                job: null,\n                jobs: [],\n                loading: false\n            };\n\n        case SEARCH_JOBS:\n            return {\n                ...state,\n                jobs: payload.jobs.filter(job => job.title === payload.search),\n                loading: false\n            };\n\n        case SORT_JOBS:\n            return {\n                ...state,\n                jobs: state.jobs.sort(function (a, b) {\n                    if (payload.att === \"salary\") {\n                        return (payload.n) * (parseInt(a.salary) - parseInt(b.salary))\n                    }\n                    if (payload.att === \"duration\") {\n                        return (payload.n) * (parseInt(a.duration) - parseInt(b.duration))\n                    }\n                    if (payload.att === \"rating\") {\n                        return (payload.n) * (parseInt(a.rating) - parseInt(b.rating))\n                    }\n\n                }),\n                loading: false\n            };\n\n        case FILTER_JOBS:\n            return {\n                ...state,\n                jobs: state.jobs.filter(function (job) {\n                    if (payload.lsalary === '') {\n                        payload.lsalary = '0'\n                    }\n                    if (payload.usalary === '') {\n                        payload.usalary = '1000000000'\n                    }\n                    if (payload.typeofjob === '') {\n                        return parseInt(job.duration) < parseInt(payload.duration) && parseInt(job.salary) >= parseInt(payload.lsalary) && parseInt(job.salary) <= parseInt(payload.usalary)\n                    }\n                    else {\n                        return job.typeofjob === payload.typeofjob && parseInt(job.duration) < parseInt(payload.duration) && parseInt(job.salary) >= parseInt(payload.lsalary) && parseInt(job.salary) <= parseInt(payload.usalary)\n                    }\n                }),\n                loading: false\n            };\n\n        case APPLY_JOB:\n            return {\n                ...state,\n                jobs: state.jobs.map(job => job._id === payload.id ? { ...job, applications: payload.applications } : job),\n                loading: false\n            };\n\n        case EDIT_JOB:\n            return {\n                ...state,\n                jobs: state.jobs.map(job => job._id === payload.id ? { job: payload.job } : job),\n                loading: false\n            };\n\n        case DELETE_JOB:\n            return {\n                ...state,\n                jobs: state.jobs.filter(job => job._id !== payload),\n                loading: false\n            }\n\n        case JOB_ERROR:\n            return {\n                ...state,\n                error: payload,\n                loading: false\n            };\n\n        default:\n            return state;\n    }\n};","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/layout/SearchFeature.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/layout/SortFeature.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/layout/FilterFeature.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/forms/ApplyJob.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/applicant/MyApplications.js",["215"],"import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\nimport { getAppliedJobs } from '../../actions/job';\nimport RateJob from './RateJob';\nimport Spinner from '../layout/Spinner';\n\nconst MyApplications = ({ getAppliedJobs, job: { jobs, loading }, aprofile: { aprofile } }) => {\n    useEffect(() => {\n        getAppliedJobs();\n    }, []);\n    return (\n        <Fragment>\n            {loading ? <Spinner /> : (\n                <Fragment>\n                    <h1 >My Applications</h1>\n                    {jobs.length > 0 ? (\n                        <Fragment>\n                            {jobs.map(job => (\n                                <div className=\"container bg-light m-1 border border-success\">\n                                    <h3 className=\"job-title\">{job.title}</h3>\n                                    <p className=\"m-0\">Recruiter Name : {job.user.name}</p>\n                                    <p className=\"m-0\">Rating : {job.rating}</p>\n                                    <p className=\"m-0\">Salary : {job.salary}</p>\n                                    <p className=\"m-0\"> Duration : {job.duration === '0' ? (<span>Indefinite</span>) : (<span>{job.duration}</span>)}</p>\n                                    <p className=\"m-0\">Deadline : <Moment format=\"YYYY/MM/DD\">{job.deadline}</Moment></p>\n                                    {aprofile.applications.map(app => app.job === job._id && <Fragment>\n                                        {app.rejected === false && app.shortlisted === false && app.accepted === false && <Fragment>\n                                            <p className=\"m-0\">Status : Pending</p>\n                                        </Fragment>}\n                                        {app.rejected === true && app.shortlisted === false && app.accepted === false && <Fragment>\n                                            <p className=\"m-0\">Status : Rejected</p>\n                                        </Fragment>}\n                                        {app.rejected === false && app.shortlisted === true && app.accepted === false && <Fragment>\n                                            <p className=\"m-0\">Status : Shortlisted</p>\n                                        </Fragment>}\n                                        {app.rejected === false && app.shortlisted === false && app.accepted === true && <Fragment>\n                                            <p className=\"m-0\">Status : Accepted</p>\n                                            <p>Date of Joining : <Moment format=\"YYYY/MM/DD\">{app.dateofjoining}</Moment></p>\n                                            {/* Rate the Job */}\n                                            <RateJob JobId={job._id} />\n                                        </Fragment>}\n                                    </Fragment>)}\n                                </div>\n                            ))}\n                        </Fragment>\n                    ) : (\n                            <Fragment>\n                                <h2>No Applied Jobs</h2>\n                            </Fragment>\n                        )}\n                </Fragment>\n            )}\n        </Fragment>\n    )\n};\n\nMyApplications.propTypes = {\n    getAppliedJobs: PropTypes.func.isRequired,\n    job: PropTypes.object.isRequired,\n    aprofile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    job: state.job,\n    aprofile: state.aprofile\n});\n\nexport default connect(mapStateToProps, { getAppliedJobs })(MyApplications);\n","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/recruiter/RecJobListing.js",["216"],"import React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getMadeJobs, deleteJob } from '../../actions/job';\nimport Moment from 'react-moment';\nimport Spinner from '../layout/Spinner';\n\nconst RecJobListing = ({ getMadeJobs, deleteJob, job: { jobs, loading } }) => {\n    useEffect(() => {\n        getMadeJobs();\n    }, []);\n    return (\n        <Fragment>\n            {loading ? <Spinner /> : (\n                <Fragment>\n                    <h1 >Jobs and Applications</h1>\n                    {jobs.length > 0 ? (\n                        <Fragment>\n                            {jobs.map(job => (\n                                <div className=\"container bg-light m-1 border border-success\">\n                                    <Link to={`/job-applicants/${job._id}`}><h3 className=\"job-title\">{job.title}</h3></Link>\n                                    <p className=\"m-0\">Salary : {job.salary}</p>\n                                    <p className=\"m-0\">Date of Posting : <Moment format=\"YYYY/MM/DD\">{job.date}</Moment></p>\n                                    <p className=\"m-0\"> Duration : {job.duration === '0' ? (<span>Indefinite</span>) : (<span>{job.duration} Month</span>)}</p>\n                                    <p className=\"m-0\">Deadline : <Moment format=\"YYYY/MM/DD\">{job.deadline}</Moment></p>\n                                    <p className=\"m-0\">Number of Applicants : {job.applications.filter(app => app.reject === false).length}</p>\n                                    <p className=\"m-0\">Maximum of Applications : {job.maxap.application}</p>\n                                    <Link to={`/edit-job/${job._id}`} className=\"btn btn-info m-1\">Edit job</Link>\n                                    <Link onClick={() => deleteJob(job._id)} className=\"btn btn-danger m-1\">Delete Job</Link>\n                                </div>\n                            ))}\n                        </Fragment>\n                    ) : (\n                            <Fragment>\n                                <h2>No Applied Jobs</h2>\n                            </Fragment>\n                        )}\n                </Fragment>\n            )}\n        </Fragment>\n    )\n};\n\nRecJobListing.propTypes = {\n    getMadeJobs: PropTypes.func.isRequired,\n    deleteJob: PropTypes.func.isRequired,\n    job: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    job: state.job\n});\n\nexport default connect(mapStateToProps, { getMadeJobs, deleteJob })(RecJobListing);\n","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/forms/EditJob.js",["217"],"import React, { useState, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { editJob } from '../../actions/job';\nimport { setAlert } from '../../actions/alert';\n\nconst EditJob = ({ match, setAlert, editJob, history }) => {\n    const [formData, setFormData] = useState({\n        application: '',\n        position: '',\n        deadline: '',\n    });\n    const {\n        application,\n        position,\n        deadline,\n    } = formData;\n\n    const onChange = e => setFormData({\n        ...formData,\n        [e.target.name]: e.target.value\n    });\n    const onSubmit = async e => {\n        e.preventDefault();\n        console.log(formData);\n        if (parseInt(application) < parseInt(position)) {\n            setAlert('Applications must be Greater than Positions', 'danger');\n        }\n        else {\n            editJob(match.params.id, formData, history);\n        }\n\n    };\n    return (\n        <Fragment>\n            <h1>\n                Edit Job\n      </h1>\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"Max No. of Applications\" name=\"application\" value={application} onChange={e => onChange(e)} />\n                    <small>Max no. of the applications</small>\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"Max No. of Positions\" name=\"position\" value={position} onChange={e => onChange(e)} />\n                    <small>Max no. of positions</small>\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"date\" name=\"deadline\" value={deadline} onChange={e => onChange(e)} />\n                    <small>Deadline for Job Application</small>\n                </div>\n\n                <input type=\"submit\" className=\"btn btn-primary my-1\" value=\"AddJob\" />\n            </form>\n        </Fragment>\n    )\n};\n\nEditJob.propTypes = {\n    editJob: PropTypes.func.isRequired,\n    setAlert: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { editJob, setAlert })(withRouter(EditJob));\n","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/recruiter/JobApplicants.js",["218"],"import React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { getProfilesByJobId, rejectApplication, shortlistApplication, acceptApplication } from '../../actions/aprofile';\nimport { getJobById } from '../../actions/job';\nimport { setAlert } from '../../actions/alert';\nimport Spinner from '../layout/Spinner';\nimport SortFeatureApplicant from './SortFeatureApplicant';\n\nconst JobApplicants = ({ match, getProfilesByJobId, getJobById, setAlert, rejectApplication, shortlistApplication, acceptApplication, aprofile: { loading, aprofiles }, job }) => {\n    useEffect(() => {\n        getProfilesByJobId(match.params.id);\n        getJobById(match.params.id);\n    }, []);\n    return (\n        <Fragment>\n            {loading || job.loading ? <Spinner /> : (\n                <Fragment>\n                    <h1>Applicants</h1>\n                    {aprofiles.length > 0 ? (\n                        <Fragment>\n                            <SortFeatureApplicant jobId={match.params.id} />\n                            {aprofiles.map(aprofile => (\n                                <Fragment>\n                                    <div className=\"container bg-light m-1 border border-success\">\n                                        {aprofile.applications.map(app => app.job === match.params.id && app.rejected === false && <Fragment>\n                                            <h3>{aprofile.user.name}</h3>\n                                            <h3>Skills</h3>\n                                            <ul>\n                                                {aprofile.skills.length > 0 ? (\n                                                    <Fragment>\n                                                        {aprofile.skills.map(skill => (\n                                                            <li><i className=\"fa fa-thumbs-up\"></i> {skill}</li>\n                                                        ))}\n                                                    </Fragment>\n                                                ) : (<Fragment></Fragment>)}\n\n                                            </ul>\n                                            <h3>Education</h3>\n                                            {aprofile.education.length > 0 ? (\n                                                <Fragment>\n                                                    {aprofile.education.map(edu => (<Fragment>\n                                                        <div>\n                                                            <i className=\"fa fa-university\"></i>\n                                                            <p> <i className=\"fa fa-book\"></i>Studied at {edu.school}</p>\n                                                            <p><i className=\"fa fa-book\"></i>{edu.fieldofstudy}</p>\n                                                            <p><i className=\"fa fa-book\"></i> From <Moment format=\"YYYY/MM/DD\">{edu.from}</Moment> -\n                                    {edu.to === null ? ('Current') : (<Moment format=\"YYYY/MM/DD\">{edu.to}</Moment>)}\n                                                            </p>\n                                                        </div>\n                                                    </Fragment>\n                                                    ))}\n                                                </Fragment>\n                                            ) : (<Fragment></Fragment>)}\n                                            <p className=\"m-0\">rating : {aprofile.rating}</p>\n                                            <p className=\"m-0\"> Date of Application : <Moment format=\"YYYY/MM/DD\">{app.dateofapplication}</Moment></p>\n                                            <p className=\"m-0\">SOP : {app.sop}</p>\n                                            {app.shortlisted === false && app.accepted === false && <Fragment>\n                                                <Link onClick={() => shortlistApplication(match.params.id, aprofile._id)} className=\"btn btn-primary m-1\">Shortlist</Link>\n                                                <Link onClick={() => rejectApplication(match.params.id, aprofile._id)} className=\"btn btn-danger m-1\">Reject</Link>\n                                            </Fragment>}\n                                            {app.shortlisted === true && app.accepted === false && <Fragment>\n                                                {parseInt(job.job.maxap.position) > aprofile.applications.filter(app => app.accepted === true).length ? (\n                                                    <Link onClick={() => acceptApplication(match.params.id, aprofile._id)} className=\"btn btn-warning m-1\">Accept</Link>\n                                                ) : (\n                                                        <Link onClick={() => setAlert('No more positions left for this job', 'danger')} className=\"btn btn-warning m-1\">Accept</Link>\n                                                    )}\n                                                <Link onClick={() => rejectApplication(match.params.id, aprofile._id)} className=\"btn btn-danger m-1\">Reject</Link>\n                                            </Fragment>}\n                                            {app.shortlisted === false && app.accepted === true && <Fragment>\n                                                <Link className=\"btn btn-info m-1\">Accepted</Link>\n                                            </Fragment>}\n                                        </Fragment>)}\n                                    </div>\n                                </Fragment>\n                            ))}\n                        </Fragment>\n                    ) : (\n                            <Fragment>\n                                <h2>No Applicants</h2>\n                            </Fragment>\n                        )}\n                </Fragment>\n            )}\n        </Fragment>\n    )\n};\n\nJobApplicants.propTypes = {\n    getProfilesByJobId: PropTypes.func.isRequired,\n    getJobById: PropTypes.func.isRequired,\n    setAlert: PropTypes.func.isRequired,\n    rejectApplication: PropTypes.func.isRequired,\n    shortlistApplication: PropTypes.func.isRequired,\n    acceptApplication: PropTypes.func.isRequired,\n    aprofile: PropTypes.object.isRequired,\n    job: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    aprofile: state.aprofile,\n    job: state.job\n});\n\nexport default connect(mapStateToProps, { getProfilesByJobId, getJobById, setAlert, rejectApplication, shortlistApplication, acceptApplication })(JobApplicants);\n","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/recruiter/SortFeatureApplicant.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/recruiter/SelectedApplicants.js",["219","220"],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/recruiter/RateApplicant.js",["221"],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/applicant/RateJob.js",["222"],"import React, { useState, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport Modal from 'react-bootstrap/Modal';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { rateJob } from '../../actions/job';\n\nconst RateJob = ({ rateJob, JobId }) => {\n    const [Ratedata, SetRateData] = useState({\n        rate: \"\"\n    });\n\n    const { rate } = Ratedata;\n\n    const [isOpen, setIsOpen] = React.useState(false);\n\n    const showModal = () => {\n        setIsOpen(true);\n    };\n\n    const hideModal = () => {\n        setIsOpen(false);\n    };\n\n    const onChange = e => SetRateData({\n        ...Ratedata,\n        [e.target.name]: e.target.value\n    });\n    const onSubmit = async e => {\n        e.preventDefault();\n        //console.log(Sortdata);\n        rateJob(rate, JobId);\n    };\n\n    return (\n        <Fragment>\n            <button onClick={showModal} className=\"btn btn-warning m-1\">Rate Job <i className=\"fa fa-briefcase\"></i></button>\n            <Modal show={isOpen} onHide={hideModal}>\n                <Modal.Header>\n                    <Modal.Title>Rate Job</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                        <div className=\"form-group d-flex\">\n                            <select placeholder=\"Rate.... \" name=\"rate\" value={rate} onChange={e => onChange(e)} >\n                                <option value=\"\"> None </option>\n                                <option value=\"0\"> 0 </option>\n                                <option value=\"1\"> 1 </option>\n                                <option value=\"2\"> 2 </option>\n                                <option value=\"3\"> 3 </option>\n                                <option value=\"4\"> 4 </option>\n                                <option value=\"5\"> 5</option>\n                            </select>\n                            <button type=\"submit\" className=\"btn btn-info m-1\" onClick={hideModal} ><i className=\"fa fa-briefcase\"></i></button>\n                        </div>\n                    </form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <button onClick={hideModal} className=\"btn btn-danger\">Cancel <i className=\"fa fa-minus-square\"></i></button>\n                </Modal.Footer>\n            </Modal>\n        </Fragment>\n    )\n};\n\nRateJob.propTypes = {\n    rateJob: PropTypes.func.isRequired,\n    JobId: PropTypes.string.isRequired,\n};\n\nexport default connect(null, { rateJob })(RateJob);\n","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/recruiter/SortSelected.js",["223","224"],{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","severity":1,"message":"230","line":8,"column":1,"nodeType":"231","endLine":22,"endColumn":2},{"ruleId":"229","severity":1,"message":"230","line":18,"column":1,"nodeType":"231","endLine":55,"endColumn":2},{"ruleId":"229","severity":1,"message":"232","line":5,"column":1,"nodeType":"231","endLine":13,"endColumn":3},{"ruleId":"233","severity":1,"message":"234","line":11,"column":8,"nodeType":"235","endLine":11,"endColumn":10,"suggestions":"236"},{"ruleId":"233","severity":1,"message":"234","line":12,"column":8,"nodeType":"235","endLine":12,"endColumn":10,"suggestions":"237"},{"ruleId":"229","severity":1,"message":"230","line":13,"column":1,"nodeType":"231","endLine":41,"endColumn":2},{"ruleId":"238","severity":1,"message":"239","line":228,"column":15,"nodeType":"240","messageId":"241","endLine":228,"endColumn":18},{"ruleId":"229","severity":1,"message":"230","line":17,"column":1,"nodeType":"231","endLine":122,"endColumn":2},{"ruleId":"242","severity":1,"message":"243","line":46,"column":49,"nodeType":"244","messageId":"245","endLine":46,"endColumn":58},{"ruleId":"242","severity":1,"message":"243","line":75,"column":49,"nodeType":"244","messageId":"245","endLine":75,"endColumn":58},{"ruleId":"233","severity":1,"message":"246","line":16,"column":8,"nodeType":"235","endLine":16,"endColumn":10,"suggestions":"247"},{"ruleId":"233","severity":1,"message":"248","line":19,"column":8,"nodeType":"235","endLine":19,"endColumn":36,"suggestions":"249"},{"ruleId":"238","severity":1,"message":"239","line":267,"column":15,"nodeType":"240","messageId":"241","endLine":267,"endColumn":18},{"ruleId":"229","severity":1,"message":"230","line":21,"column":1,"nodeType":"231","endLine":122,"endColumn":2},{"ruleId":"242","severity":1,"message":"243","line":56,"column":39,"nodeType":"244","messageId":"245","endLine":56,"endColumn":48},{"ruleId":"233","severity":1,"message":"250","line":12,"column":8,"nodeType":"235","endLine":12,"endColumn":10,"suggestions":"251"},{"ruleId":"233","severity":1,"message":"252","line":12,"column":8,"nodeType":"235","endLine":12,"endColumn":10,"suggestions":"253"},{"ruleId":"238","severity":1,"message":"254","line":3,"column":10,"nodeType":"240","messageId":"241","endLine":3,"endColumn":14},{"ruleId":"233","severity":1,"message":"255","line":16,"column":8,"nodeType":"235","endLine":16,"endColumn":10,"suggestions":"256"},{"ruleId":"238","severity":1,"message":"254","line":4,"column":10,"nodeType":"240","messageId":"241","endLine":4,"endColumn":14},{"ruleId":"233","severity":1,"message":"257","line":15,"column":8,"nodeType":"235","endLine":15,"endColumn":10,"suggestions":"258"},{"ruleId":"238","severity":1,"message":"254","line":2,"column":10,"nodeType":"240","messageId":"241","endLine":2,"endColumn":14},{"ruleId":"238","severity":1,"message":"254","line":2,"column":10,"nodeType":"240","messageId":"241","endLine":2,"endColumn":14},{"ruleId":"238","severity":1,"message":"259","line":4,"column":8,"nodeType":"240","messageId":"241","endLine":4,"endColumn":17},{"ruleId":"260","severity":1,"message":"261","line":7,"column":23,"nodeType":"262","messageId":"263","endLine":7,"endColumn":26},"no-native-reassign",["264"],"no-negated-in-lhs",["265"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","Assign arrow function to a variable before exporting as module default","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["266"],["267"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.sort() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'getJobs'. Either include it or remove the dependency array. If 'getJobs' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["268"],"React Hook useEffect has a missing dependency: 'aprofile.skills'. Either include it or remove the dependency array. If 'setFormData' needs the current value of 'aprofile.skills', you can also switch to useReducer instead of useState and read 'aprofile.skills' in the reducer.",["269"],"React Hook useEffect has a missing dependency: 'getAppliedJobs'. Either include it or remove the dependency array. If 'getAppliedJobs' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["270"],"React Hook useEffect has a missing dependency: 'getMadeJobs'. Either include it or remove the dependency array. If 'getMadeJobs' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["271"],"'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'getJobById', 'getProfilesByJobId', and 'match.params.id'. Either include them or remove the dependency array. If 'getProfilesByJobId' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["272"],"React Hook useEffect has a missing dependency: 'getAcceptedProfileByRec'. Either include it or remove the dependency array. If 'getAcceptedProfileByRec' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["273"],"'PropTypes' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation",{"desc":"274","fix":"275"},{"desc":"274","fix":"276"},{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"289","text":"290"},{"range":"291","text":"290"},"Update the dependencies array to be: [getJobs]",{"range":"292","text":"293"},"Update the dependencies array to be: [loading, getCurrentProfile, aprofile.skills]",{"range":"294","text":"295"},"Update the dependencies array to be: [getAppliedJobs]",{"range":"296","text":"297"},"Update the dependencies array to be: [getMadeJobs]",{"range":"298","text":"299"},"Update the dependencies array to be: [getJobById, getProfilesByJobId, match.params.id]",{"range":"300","text":"301"},"Update the dependencies array to be: [getAcceptedProfileByRec]",{"range":"302","text":"303"},[424,426],"[getCurrentProfile]",[459,461],[637,639],"[getJobs]",[624,652],"[loading, getCurrentProfile, aprofile.skills]",[441,443],"[getAppliedJobs]",[437,439],"[getMadeJobs]",[812,814],"[getJobById, getProfilesByJobId, match.params.id]",[536,538],"[getAcceptedProfileByRec]"]