[{"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/index.js":"1","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/App.js":"2","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/layout/Navbar.js":"3","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/layout/Landing.js":"4","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/auth/Login.js":"5","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/auth/Register.js":"6","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/store.js":"7","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/reducers/index.js":"8","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/reducers/alert.js":"9","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/actions/types.js":"10","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/actions/alert.js":"11","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/layout/Alert.js":"12","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/reducers/auth.js":"13","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/actions/auth.js":"14","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/utils/setAuthToken.js":"15","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/layout/Spinner.js":"16","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/routing/PrivateRoute.js":"17","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/dashboard/Dashboard.js":"18","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/recruiter/Recruiter.js":"19","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/applicant/Applicant.js":"20","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/actions/rprofile.js":"21","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/reducers/rprofile.js":"22","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/forms/CreateRprofile.js":"23","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/forms/CreateAprofile.js":"24","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/actions/aprofile.js":"25","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/reducers/aprofile.js":"26","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/forms/AddEducation.js":"27","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/applicant/JobListing.js":"28","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/forms/EditAprofile.js":"29","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/forms/AddJob.js":"30","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/actions/job.js":"31","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/reducers/job.js":"32","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/layout/SearchFeature.js":"33","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/layout/SortFeature.js":"34","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/layout/FilterFeature.js":"35","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/forms/ApplyJob.js":"36","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/applicant/MyApplications.js":"37","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/recruiter/RecJobListing.js":"38","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/forms/EditJob.js":"39","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/recruiter/JobApplicants.js":"40","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/recruiter/SortFeatureApplicant.js":"41","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/recruiter/SelectedApplicants.js":"42"},{"size":154,"mtime":1610261503198,"results":"43","hashOfConfig":"44"},{"size":3208,"mtime":1611476953342,"results":"45","hashOfConfig":"44"},{"size":1855,"mtime":1610426462189,"results":"46","hashOfConfig":"44"},{"size":741,"mtime":1611085630237,"results":"47","hashOfConfig":"44"},{"size":1973,"mtime":1610355904255,"results":"48","hashOfConfig":"44"},{"size":3287,"mtime":1610355558249,"results":"49","hashOfConfig":"44"},{"size":386,"mtime":1610303971007,"results":"50","hashOfConfig":"44"},{"size":286,"mtime":1610733464194,"results":"51","hashOfConfig":"44"},{"size":420,"mtime":1610304319723,"results":"52","hashOfConfig":"44"},{"size":1136,"mtime":1611408739262,"results":"53","hashOfConfig":"44"},{"size":354,"mtime":1610304443158,"results":"54","hashOfConfig":"44"},{"size":476,"mtime":1610305097462,"results":"55","hashOfConfig":"44"},{"size":1255,"mtime":1610357244315,"results":"56","hashOfConfig":"44"},{"size":2391,"mtime":1610904893036,"results":"57","hashOfConfig":"44"},{"size":252,"mtime":1610345033463,"results":"58","hashOfConfig":"44"},{"size":290,"mtime":1608320888871,"results":"59","hashOfConfig":"44"},{"size":580,"mtime":1610425252511,"results":"60","hashOfConfig":"44"},{"size":863,"mtime":1610425648566,"results":"61","hashOfConfig":"44"},{"size":2346,"mtime":1611476875024,"results":"62","hashOfConfig":"44"},{"size":4009,"mtime":1611168694429,"results":"63","hashOfConfig":"44"},{"size":1698,"mtime":1610602354215,"results":"64","hashOfConfig":"44"},{"size":806,"mtime":1610602731702,"results":"65","hashOfConfig":"44"},{"size":1737,"mtime":1611155513944,"results":"66","hashOfConfig":"44"},{"size":2101,"mtime":1610642481518,"results":"67","hashOfConfig":"44"},{"size":5945,"mtime":1611471982901,"results":"68","hashOfConfig":"44"},{"size":1949,"mtime":1611345648258,"results":"69","hashOfConfig":"44"},{"size":3061,"mtime":1610690900033,"results":"70","hashOfConfig":"44"},{"size":4904,"mtime":1611408005200,"results":"71","hashOfConfig":"44"},{"size":2566,"mtime":1610642529517,"results":"72","hashOfConfig":"44"},{"size":4262,"mtime":1611254961657,"results":"73","hashOfConfig":"44"},{"size":6522,"mtime":1611408866307,"results":"74","hashOfConfig":"44"},{"size":3569,"mtime":1611408926637,"results":"75","hashOfConfig":"44"},{"size":1183,"mtime":1610991666224,"results":"76","hashOfConfig":"44"},{"size":2646,"mtime":1611085583950,"results":"77","hashOfConfig":"44"},{"size":4855,"mtime":1611085386721,"results":"78","hashOfConfig":"44"},{"size":1290,"mtime":1611162960173,"results":"79","hashOfConfig":"44"},{"size":3509,"mtime":1611407279567,"results":"80","hashOfConfig":"44"},{"size":2587,"mtime":1611391527561,"results":"81","hashOfConfig":"44"},{"size":2230,"mtime":1611254964974,"results":"82","hashOfConfig":"44"},{"size":6753,"mtime":1611410282763,"results":"83","hashOfConfig":"44"},{"size":2756,"mtime":1611386935567,"results":"84","hashOfConfig":"44"},{"size":2983,"mtime":1611477004738,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"khvnyf",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"88"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"88"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"88"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"88"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"88"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"88"},"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/index.js",[],["187","188"],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/App.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/layout/Navbar.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/layout/Landing.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/auth/Login.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/auth/Register.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/store.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/reducers/index.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/reducers/alert.js",["189"],"import {\n    SET_ALERT,\n    REMOVE_ALERT\n} from '../actions/types';\n\nconst initialState = [];\n\nexport default function (state = initialState, action) {\n\n    const { type, payload } = action;\n\n    switch (type) {\n        case SET_ALERT:\n            return [...state, payload];\n\n        case REMOVE_ALERT:\n            return state.filter(alert => alert.id !== payload);\n\n        default:\n            return state;\n    }\n};","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/actions/types.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/actions/alert.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/layout/Alert.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/reducers/auth.js",["190"],"import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT\n} from '../actions/types';\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null\n};\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action;\n    switch (type) {\n        case REGISTER_SUCCESS:\n        case LOGIN_SUCCESS:\n            localStorage.setItem('token', payload.token)\n            return {\n                ...state,\n                ...payload,\n                isAuthenticated: true,\n                loading: false\n            };\n\n        case USER_LOADED:\n            return {\n                ...state,\n                user: payload,\n                loading: false,\n                isAuthenticated: true\n            };\n\n        case REGISTER_FAIL:\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n        case LOGOUT:\n            localStorage.removeItem('token')\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false,\n                loading: false,\n                user: null\n            };\n\n        default:\n            return state;\n    }\n}\n","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/actions/auth.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/utils/setAuthToken.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/layout/Spinner.js",["191"],"import React, { Fragment } from 'react';\nimport spinner from './spinner.gif';\n\n\nexport default () => (\n    <Fragment>\n        <img\n            src={spinner}\n            style={{ width: '200px', margin: 'auto', display: 'block' }}\n            alt='Loading ...'\n        />\n    </Fragment>\n);\n","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/routing/PrivateRoute.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/dashboard/Dashboard.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/recruiter/Recruiter.js",["192"],"import React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getCurrentProfile } from '../../actions/rprofile';\nimport Spinner from '../layout/Spinner';\n\nconst Recruiter = ({ getCurrentProfile, rprofile: { loading, rprofile }, auth: { user } }) => {\n    useEffect(() => {\n        getCurrentProfile();\n    }, []);\n    return loading && rprofile === null ? (\n        <Spinner />\n    ) : (\n            <Fragment>\n                <h1>Dashboard</h1>\n                <p><i className=\"fa fa-user\"></i>Welcome {user && user.name}</p>\n                {rprofile === null ? (\n                    <Fragment>\n                        <p>Kindly complete your profile</p>\n                        <Link to=\"/create-rprofile\" className=\"btn btn-info\">\n                            Create Profile\n                        </Link>\n                    </Fragment>\n                ) : (\n                        <Fragment>\n                            <Link to=\"/create-rprofile\" className=\"btn btn-info m-2\">\n                                Edit Profile\n                        </Link>\n                            <Link to=\"/add-job\" className=\"btn btn-danger m-2\">\n                                Add a Job\n                            </Link>\n                            <Link to=\"/rec-job-listing\" className=\"btn btn-primary m-2\">\n                                Jobs and Applications\n                            </Link>\n                            <Link to=\"/selected-applicants\" className=\"btn btn-dark m-2\">\n                                Selected Applicants\n                            </Link>\n                            <p className=\"m-2\"><i className=\"fa fa-briefcase\"> Contact No. : {rprofile.contactno}</i></p>\n                            <p className=\"m-2\"><i className=\"fa fa-briefcase\"></i> Bio : {rprofile.bio}</p>\n                        </Fragment>\n                    )}\n            </Fragment>\n        )\n};\n\nRecruiter.propTypes = {\n    getCurrentProfile: PropTypes.func.isRequired,\n    rprofile: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    rprofile: state.rprofile,\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile })(Recruiter);\n","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/applicant/Applicant.js",["193"],"import React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getCurrentProfile } from '../../actions/aprofile';\nimport Spinner from '../layout/Spinner';\nimport Moment from 'react-moment';\n\nconst Applicant = ({ getCurrentProfile, aprofile: { aprofile, loading }, auth: { user } }) => {\n    useEffect(() => {\n        getCurrentProfile();\n    }, []);\n    return loading && aprofile === null ? (\n        <Spinner />\n    ) : (\n            <Fragment>\n                <h1>Dashboard</h1>\n                <p><i className=\"fa fa-user\"></i>Welcome {user && user.name}</p>\n                {aprofile === null ? (\n                    <Fragment>\n                        <p>Kindly complete your profile</p>\n                        <Link to=\"/create-aprofile\" className=\"btn btn-info\">\n                            Create Profile <i className=\"fa fa-black-tie\"></i>\n                        </Link>\n                    </Fragment>\n                ) : (\n                        <Fragment>\n                            <Link to=\"/edit-aprofile\" className=\"btn btn-info mb-2 mr-3\">\n                                Edit Profile <i className=\"fa fa-black-tie\"></i>\n                            </Link>\n                            <Link to=\"/add-education\" className=\"btn btn-warning mb-2 mr-3\">\n                                Add Education <i className=\"fa fa-university\"></i>\n                            </Link>\n                            <Link to=\"/job-listing\" className=\"btn btn-danger mb-2 mr-3\">\n                                Job Listing <i className=\"fa fa-briefcase\"></i>\n                            </Link>\n                            <Link to=\"/my-application\" className=\"btn btn-dark mb-2 mr-3\">\n                                My Applications <i className=\"fa fa-envelope\"></i>\n                            </Link>\n\n                            <h2>Skills</h2>\n                            <ul>\n                                {aprofile.skills.length > 0 ? (\n                                    <Fragment>\n                                        {aprofile.skills.map(skill => (\n                                            <li><i className=\"fa fa-thumbs-up\"></i> {skill}</li>\n                                        ))}\n                                    </Fragment>\n                                ) : (<Fragment></Fragment>)}\n\n                            </ul>\n                            <h2>Education</h2>\n                            {aprofile.education.length > 0 ? (\n                                <Fragment>\n                                    {aprofile.education.map(edu => (<Fragment>\n                                        <div>\n                                            <i className=\"fa fa-university\"></i>\n                                            <p> <i className=\"fa fa-book\"></i>Studied at {edu.school}</p>\n                                            <p><i className=\"fa fa-book\"></i>{edu.fieldofstudy}</p>\n                                            <p><i className=\"fa fa-book\"></i> From <Moment format=\"YYYY/MM/DD\">{edu.from}</Moment> -\n                                    {edu.to === null ? ('Current') : (<Moment format=\"YYYY/MM/DD\">{edu.to}</Moment>)}\n                                            </p>\n                                        </div>\n                                    </Fragment>\n                                    ))}\n                                </Fragment>\n                            ) : (<Fragment></Fragment>)}\n                        </Fragment>\n                    )\n                }\n            </Fragment >\n        )\n};\n\nApplicant.propTypes = {\n    getCurrentProfile: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    aprofile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    aprofile: state.aprofile\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile })(Applicant);\n","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/actions/rprofile.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/reducers/rprofile.js",["194"],"import {\n    GET_RPROFILE,\n    RPROFILE_ERROR,\n    CLEAR_RPROFILE\n} from '../actions/types';\n\nconst initialState = {\n    rprofile: null,\n    errors: {},\n    loading: true\n};\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action\n    switch (type) {\n\n        case GET_RPROFILE:\n            return {\n                ...state,\n                rprofile: payload,\n                loading: false\n            };\n\n        case CLEAR_RPROFILE:\n            return {\n                ...state,\n                rprofile: null,\n                loading: false\n            };\n\n        case RPROFILE_ERROR:\n            return {\n                ...state,\n                errors: payload,\n                loading: false\n            }\n\n        default:\n            return state;\n    }\n}","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/forms/CreateRprofile.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/forms/CreateAprofile.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/actions/aprofile.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/reducers/aprofile.js",["195","196"],"import {\n    GET_APROFILE,\n    GET_APROFILES,\n    SORT_APROFILES,\n    APROFILE_ERROR,\n    CLEAR_APROFILE\n} from '../actions/types';\n\nconst initialState = {\n    aprofile: null,\n    aprofiles: [],\n    errors: {},\n    loading: true\n};\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action\n    switch (type) {\n\n        case GET_APROFILE:\n            return {\n                ...state,\n                aprofile: payload,\n                loading: false\n            };\n\n        case CLEAR_APROFILE:\n            return {\n                ...state,\n                aprofile: null,\n                aprofiles: [],\n                loading: false\n            };\n\n        case GET_APROFILES:\n            return {\n                ...state,\n                aprofiles: payload,\n                loading: false\n            };\n\n        case SORT_APROFILES:\n            return {\n                ...state,\n                aprofiles: state.aprofiles.sort(function (a, b) {\n                    if (payload.att === \"name\") {\n                        return (payload.n) * (parseInt(a.user.name) - parseInt(b.user.name))\n                    }\n                    if (payload.att === \"date\") {\n                        const datea = a.applications.filter(app => app.job === payload.jobId).dateofapplication;\n                        const dateb = b.applications.filter(app => app.job === payload.jobId).dateofapplication;\n\n                        return (payload.n) * (datea - dateb)\n                    }\n                    if (payload.att === \"rating\") {\n                        return (payload.n) * (parseInt(a.rating) - parseInt(b.rating))\n                    }\n\n                }),\n                loading: false\n            };\n\n        case APROFILE_ERROR:\n            return {\n                ...state,\n                errors: payload,\n                loading: false\n            }\n\n        default:\n            return state;\n    }\n}",["197","198"],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/forms/AddEducation.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/applicant/JobListing.js",["199"],"import React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { getJobs } from '../../actions/job';\nimport { setAlert } from '../../actions/alert';\nimport Spinner from '../layout/Spinner';\nimport SearchFeature from '../layout/SearchFeature';\nimport SortFeature from '../layout/SortFeature';\nimport FilterFeature from '../layout/FilterFeature';\n\nconst JobListing = ({ getJobs, setAlert, job: { loading, jobs }, aprofile: { aprofile } }) => {\n    useEffect(() => {\n        getJobs();\n    }, []);\n\n    return (\n        <Fragment>\n            {loading ? (\n                <Fragment>\n                    <Spinner />\n                </Fragment>\n            ) : (\n                    <Fragment>\n                        <Link onClick={getJobs} to='/job-listing' className=\"btn btn-primary m-2\"><i className=\"fa fa-tag\"></i> Job Listing</Link>\n                        <h1>Job Listing</h1>\n                        <SearchFeature />\n                        <SortFeature />\n                        <FilterFeature />\n                        {jobs.length > 0 ? (\n                            <Fragment>\n                                {jobs.map(job => (\n                                    <div className=\"container bg-light m-1 border border-success\">\n                                        <h3 className=\"job-title\">{job.title}</h3>\n                                        <p className=\"m-0\">Recruiter Name : {job.user.name}</p>\n                                        <p className=\"m-0\">Rating : {job.rating}</p>\n                                        <p className=\"m-0\">Salary : {job.salary}</p>\n                                        <p className=\"m-0\"> Duration : {job.duration === '0' ? (<span>Indefinite</span>) : (<span>{job.duration} Month</span>)}</p>\n                                        <p className=\"m-0\">Deadline : <Moment format=\"YYYY/MM/DD\">{job.deadline}</Moment></p>\n                                        {parseInt(job.maxap.application) <= job.applications.length ? (\n                                            <Fragment>\n                                                <Link className=\"btn btn-danger m-1\">Full</Link>\n                                            </Fragment>\n                                        ) : (\n                                                <Fragment>\n                                                    {aprofile.applications.findIndex(app => app.job === job._id) === -1 ? (\n                                                        <Fragment>\n                                                            {aprofile.applications.filter(app => app.rejected === false).length >= 10 ? (\n                                                                <Fragment>\n                                                                    <Link onClick={() => setAlert('Can not apply for more than 10 Applications', 'danger')} className=\"btn btn-primary m-1\"> Apply </Link>\n                                                                </Fragment>\n                                                            ) : (\n                                                                    <Fragment>\n                                                                        <Link to={`/apply-job/${job._id}`} className=\"btn btn-primary m-1\"> Apply</Link>\n                                                                    </Fragment>\n                                                                )}\n                                                        </Fragment>\n                                                    ) : (\n                                                            <Fragment>\n                                                                <Link className=\"btn btn-warning m-1\">Applied</Link>\n                                                            </Fragment>\n                                                        )}\n                                                </Fragment>\n                                            )}\n                                    </div>\n                                ))}\n                            </Fragment>\n                        ) : (\n                                <Fragment>\n                                    <h2>No Jobs Available</h2>\n                                </Fragment>\n                            )}\n                    </Fragment>\n                )\n            }\n        </Fragment>\n\n    )\n};\n\nJobListing.propTypes = {\n    getJobs: PropTypes.func.isRequired,\n    setAlert: PropTypes.func.isRequired,\n    job: PropTypes.object.isRequired,\n    aprofile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    job: state.job,\n    aprofile: state.aprofile\n});\n\nexport default connect(mapStateToProps, { getJobs, setAlert })(JobListing);\n","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/forms/EditAprofile.js",["200"],"import React, { useState, Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createProfile, getCurrentProfile } from '../../actions/aprofile';\n\n\nconst EditAprofile = ({ aprofile: { aprofile, loading }, getCurrentProfile, createProfile, history }) => {\n    const [formData, setFormData] = useState({\n        skills: '',\n    });\n\n    useEffect(() => {\n        getCurrentProfile();\n\n        setFormData({\n            skills: loading || !aprofile.skills ? '' : aprofile.skills.join(',')\n        });\n    }, [loading, getCurrentProfile]);\n\n    const { skills } = formData;\n\n    const onChange = e => setFormData({\n        ...formData,\n        [e.target.name]: e.target.value\n    });\n    const onSubmit = async e => {\n        e.preventDefault();\n        console.log(formData);\n        createProfile(formData, history);\n    };\n\n    return (\n        <Fragment>\n            <h1> Edit Profile</h1>\n            <p>Add more Skills</p>\n            <h3>Skills</h3>\n            <u>\n                <li><i className=\"fa fa-tag\">JavaScript</i></li>\n                <li><i className=\"fa fa-tag\">Python</i></li>\n                <li><i className=\"fa fa-tag\">React</i></li>\n                <li><i className=\"fa fa-tag\">MongoDb</i></li>\n                <li><i className=\"fa fa-tag\">CSS</i></li>\n                <li><i className=\"fa fa-tag\">DotNet</i></li>\n                <li><i className=\"fa fa-tag\">Angular</i></li>\n                <li><i className=\"fa fa-tag\">Select from these or add your more skills</i></li>\n            </u>\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)} />\n                    <small>Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n            </small>\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary m-1\" value=\"EditProfile\" />\n                <Link className=\"btn btn-light m-1\" to=\"/dashboard\">Go Back</Link>\n            </form>\n        </Fragment>\n    )\n};\n\nEditAprofile.propTypes = {\n    createProfile: PropTypes.func.isRequired,\n    getCurrentProfile: PropTypes.func.isRequired,\n    aprofile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    aprofile: state.aprofile\n});\n\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(withRouter(EditAprofile));\n","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/forms/AddJob.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/actions/job.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/reducers/job.js",["201","202"],"import {\n    GET_JOBS,\n    JOB_ERROR,\n    CLEAR_JOBS,\n    SEARCH_JOBS,\n    SORT_JOBS,\n    FILTER_JOBS,\n    APPLY_JOB,\n    EDIT_JOB,\n    DELETE_JOB,\n    GET_JOB\n} from '../actions/types';\n\nconst initialState = {\n    job: null,\n    jobs: [],\n    loading: true,\n    error: {}\n};\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action;\n    switch (type) {\n        case GET_JOBS:\n            return {\n                ...state,\n                jobs: payload,\n                loading: false\n            };\n\n        case GET_JOB:\n            return {\n                ...state,\n                job: payload,\n                loading: false\n            };\n\n        case CLEAR_JOBS:\n            return {\n                ...state,\n                job: null,\n                jobs: [],\n                loading: false\n            };\n\n        case SEARCH_JOBS:\n            return {\n                ...state,\n                jobs: payload.jobs.filter(job => job.title === payload.search),\n                loading: false\n            };\n\n        case SORT_JOBS:\n            return {\n                ...state,\n                jobs: state.jobs.sort(function (a, b) {\n                    if (payload.att === \"salary\") {\n                        return (payload.n) * (parseInt(a.salary) - parseInt(b.salary))\n                    }\n                    if (payload.att === \"duration\") {\n                        return (payload.n) * (parseInt(a.duration) - parseInt(b.duration))\n                    }\n                    if (payload.att === \"rating\") {\n                        return (payload.n) * (parseInt(a.rating) - parseInt(b.rating))\n                    }\n\n                }),\n                loading: false\n            };\n\n        case FILTER_JOBS:\n            return {\n                ...state,\n                jobs: state.jobs.filter(function (job) {\n                    if (payload.lsalary === '') {\n                        payload.lsalary = '0'\n                    }\n                    if (payload.usalary === '') {\n                        payload.usalary = '1000000000'\n                    }\n                    if (payload.typeofjob === '') {\n                        return parseInt(job.duration) < parseInt(payload.duration) && parseInt(job.salary) >= parseInt(payload.lsalary) && parseInt(job.salary) <= parseInt(payload.usalary)\n                    }\n                    else {\n                        return job.typeofjob === payload.typeofjob && parseInt(job.duration) < parseInt(payload.duration) && parseInt(job.salary) >= parseInt(payload.lsalary) && parseInt(job.salary) <= parseInt(payload.usalary)\n                    }\n                }),\n                loading: false\n            };\n\n        case APPLY_JOB:\n            return {\n                ...state,\n                jobs: state.jobs.map(job => job._id === payload.id ? { ...job, applications: payload.applications } : job),\n                loading: false\n            };\n\n        case EDIT_JOB:\n            return {\n                ...state,\n                jobs: state.jobs.map(job => job._id === payload.id ? { job: payload.job } : job),\n                loading: false\n            };\n\n        case DELETE_JOB:\n            return {\n                ...state,\n                jobs: state.jobs.filter(job => job._id !== payload),\n                loading: false\n            }\n\n        case JOB_ERROR:\n            return {\n                ...state,\n                error: payload,\n                loading: false\n            };\n\n        default:\n            return state;\n    }\n};","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/layout/SearchFeature.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/layout/SortFeature.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/layout/FilterFeature.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/forms/ApplyJob.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/applicant/MyApplications.js",["203"],"import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\nimport { getAppliedJobs } from '../../actions/job';\nimport Spinner from '../layout/Spinner';\n\nconst MyApplications = ({ getAppliedJobs, job: { jobs, loading }, aprofile: { aprofile } }) => {\n    useEffect(() => {\n        getAppliedJobs();\n    }, []);\n    return (\n        <Fragment>\n            {loading ? <Spinner /> : (\n                <Fragment>\n                    <h1 >My Applications</h1>\n                    {jobs.length > 0 ? (\n                        <Fragment>\n                            {jobs.map(job => (\n                                <div className=\"container bg-light m-1 border border-success\">\n                                    <h3 className=\"job-title\">{job.title}</h3>\n                                    <p className=\"m-0\">Recruiter Name : {job.user.name}</p>\n                                    <p className=\"m-0\">Rating : {job.rating}</p>\n                                    <p className=\"m-0\">Salary : {job.salary}</p>\n                                    <p className=\"m-0\"> Duration : {job.duration === '0' ? (<span>Indefinite</span>) : (<span>{job.duration}</span>)}</p>\n                                    <p className=\"m-0\">Deadline : <Moment format=\"YYYY/MM/DD\">{job.deadline}</Moment></p>\n                                    {aprofile.applications.map(app => app.job === job._id && <Fragment>\n                                        {app.rejected === false && app.shortlisted === false && app.accepted === false && <Fragment>\n                                            <p className=\"m-0\">Status : Pending</p>\n                                        </Fragment>}\n                                        {app.rejected === true && app.shortlisted === false && app.accepted === false && <Fragment>\n                                            <p className=\"m-0\">Status : Rejected</p>\n                                        </Fragment>}\n                                        {app.rejected === false && app.shortlisted === true && app.accepted === false && <Fragment>\n                                            <p className=\"m-0\">Status : Shortlisted</p>\n                                        </Fragment>}\n                                        {app.rejected === false && app.shortlisted === false && app.accepted === true && <Fragment>\n                                            <p className=\"m-0\">Status : Accepted</p>\n                                            <p>Date of Joining : <Moment format=\"YYYY/MM/DD\">{app.dateofjoining}</Moment></p>\n                                            {/* Rate the Job */}\n                                        </Fragment>}\n                                    </Fragment>)}\n                                </div>\n                            ))}\n                        </Fragment>\n                    ) : (\n                            <Fragment>\n                                <h2>No Applied Jobs</h2>\n                            </Fragment>\n                        )}\n                </Fragment>\n            )}\n        </Fragment>\n    )\n};\n\nMyApplications.propTypes = {\n    getAppliedJobs: PropTypes.func.isRequired,\n    job: PropTypes.object.isRequired,\n    aprofile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    job: state.job,\n    aprofile: state.aprofile\n});\n\nexport default connect(mapStateToProps, { getAppliedJobs })(MyApplications);\n","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/recruiter/RecJobListing.js",["204"],"import React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getMadeJobs, deleteJob } from '../../actions/job';\nimport Moment from 'react-moment';\nimport Spinner from '../layout/Spinner';\n\nconst RecJobListing = ({ getMadeJobs, deleteJob, job: { jobs, loading } }) => {\n    useEffect(() => {\n        getMadeJobs();\n    }, []);\n    return (\n        <Fragment>\n            {loading ? <Spinner /> : (\n                <Fragment>\n                    <h1 >Jobs and Applications</h1>\n                    {jobs.length > 0 ? (\n                        <Fragment>\n                            {jobs.map(job => (\n                                <div className=\"container bg-light m-1 border border-success\">\n                                    <Link to={`/job-applicants/${job._id}`}><h3 className=\"job-title\">{job.title}</h3></Link>\n                                    <p className=\"m-0\">Salary : {job.salary}</p>\n                                    <p className=\"m-0\">Date of Posting : <Moment format=\"YYYY/MM/DD\">{job.date}</Moment></p>\n                                    <p className=\"m-0\"> Duration : {job.duration === '0' ? (<span>Indefinite</span>) : (<span>{job.duration} Month</span>)}</p>\n                                    <p className=\"m-0\">Deadline : <Moment format=\"YYYY/MM/DD\">{job.deadline}</Moment></p>\n                                    <p className=\"m-0\">Number of Applicants : {job.applications.filter(app => app.reject === false).length}</p>\n                                    <p className=\"m-0\">Maximum of Applications : {job.maxap.application}</p>\n                                    <Link to={`/edit-job/${job._id}`} className=\"btn btn-info m-1\">Edit job</Link>\n                                    <Link onClick={() => deleteJob(job._id)} className=\"btn btn-danger m-1\">Delete Job</Link>\n                                </div>\n                            ))}\n                        </Fragment>\n                    ) : (\n                            <Fragment>\n                                <h2>No Applied Jobs</h2>\n                            </Fragment>\n                        )}\n                </Fragment>\n            )}\n        </Fragment>\n    )\n};\n\nRecJobListing.propTypes = {\n    getMadeJobs: PropTypes.func.isRequired,\n    deleteJob: PropTypes.func.isRequired,\n    job: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    job: state.job\n});\n\nexport default connect(mapStateToProps, { getMadeJobs, deleteJob })(RecJobListing);\n","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/forms/EditJob.js",["205"],"import React, { useState, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { editJob } from '../../actions/job';\nimport { setAlert } from '../../actions/alert';\n\nconst EditJob = ({ match, setAlert, editJob, history }) => {\n    const [formData, setFormData] = useState({\n        application: '',\n        position: '',\n        deadline: '',\n    });\n    const {\n        application,\n        position,\n        deadline,\n    } = formData;\n\n    const onChange = e => setFormData({\n        ...formData,\n        [e.target.name]: e.target.value\n    });\n    const onSubmit = async e => {\n        e.preventDefault();\n        console.log(formData);\n        if (parseInt(application) < parseInt(position)) {\n            setAlert('Applications must be Greater than Positions', 'danger');\n        }\n        else {\n            editJob(match.params.id, formData, history);\n        }\n\n    };\n    return (\n        <Fragment>\n            <h1>\n                Edit Job\n      </h1>\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"Max No. of Applications\" name=\"application\" value={application} onChange={e => onChange(e)} />\n                    <small>Max no. of the applications</small>\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"Max No. of Positions\" name=\"position\" value={position} onChange={e => onChange(e)} />\n                    <small>Max no. of positions</small>\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"date\" name=\"deadline\" value={deadline} onChange={e => onChange(e)} />\n                    <small>Deadline for Job Application</small>\n                </div>\n\n                <input type=\"submit\" className=\"btn btn-primary my-1\" value=\"AddJob\" />\n            </form>\n        </Fragment>\n    )\n};\n\nEditJob.propTypes = {\n    editJob: PropTypes.func.isRequired,\n    setAlert: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { editJob, setAlert })(withRouter(EditJob));\n","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/recruiter/JobApplicants.js",["206"],"import React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { getProfilesByJobId, rejectApplication, shortlistApplication, acceptApplication } from '../../actions/aprofile';\nimport { getJobById } from '../../actions/job';\nimport { setAlert } from '../../actions/alert';\nimport Spinner from '../layout/Spinner';\nimport SortFeatureApplicant from './SortFeatureApplicant';\n\nconst JobApplicants = ({ match, getProfilesByJobId, getJobById, setAlert, rejectApplication, shortlistApplication, acceptApplication, aprofile: { loading, aprofiles }, job }) => {\n    useEffect(() => {\n        getProfilesByJobId(match.params.id);\n        getJobById(match.params.id);\n    }, []);\n    return (\n        <Fragment>\n            {loading || job.loading ? <Spinner /> : (\n                <Fragment>\n                    <h1>Applicants</h1>\n                    {aprofiles.length > 0 ? (\n                        <Fragment>\n                            <SortFeatureApplicant jobId={match.params.id} />\n                            {aprofiles.map(aprofile => (\n                                <Fragment>\n                                    <div className=\"container bg-light m-1 border border-success\">\n                                        {aprofile.applications.map(app => app.job === match.params.id && app.rejected === false && <Fragment>\n                                            <h3>{aprofile.user.name}</h3>\n                                            <h3>Skills</h3>\n                                            <ul>\n                                                {aprofile.skills.length > 0 ? (\n                                                    <Fragment>\n                                                        {aprofile.skills.map(skill => (\n                                                            <li><i className=\"fa fa-thumbs-up\"></i> {skill}</li>\n                                                        ))}\n                                                    </Fragment>\n                                                ) : (<Fragment></Fragment>)}\n\n                                            </ul>\n                                            <h3>Education</h3>\n                                            {aprofile.education.length > 0 ? (\n                                                <Fragment>\n                                                    {aprofile.education.map(edu => (<Fragment>\n                                                        <div>\n                                                            <i className=\"fa fa-university\"></i>\n                                                            <p> <i className=\"fa fa-book\"></i>Studied at {edu.school}</p>\n                                                            <p><i className=\"fa fa-book\"></i>{edu.fieldofstudy}</p>\n                                                            <p><i className=\"fa fa-book\"></i> From <Moment format=\"YYYY/MM/DD\">{edu.from}</Moment> -\n                                    {edu.to === null ? ('Current') : (<Moment format=\"YYYY/MM/DD\">{edu.to}</Moment>)}\n                                                            </p>\n                                                        </div>\n                                                    </Fragment>\n                                                    ))}\n                                                </Fragment>\n                                            ) : (<Fragment></Fragment>)}\n                                            <p className=\"m-0\">rating : {aprofile.rating}</p>\n                                            <p className=\"m-0\"> Date of Application : <Moment format=\"YYYY/MM/DD\">{app.dateofapplication}</Moment></p>\n                                            <p className=\"m-0\">SOP : {app.sop}</p>\n                                            {app.shortlisted === false && app.accepted === false && <Fragment>\n                                                <Link onClick={() => shortlistApplication(match.params.id, aprofile._id)} className=\"btn btn-primary m-1\">Shortlist</Link>\n                                                <Link onClick={() => rejectApplication(match.params.id, aprofile._id)} className=\"btn btn-danger m-1\">Reject</Link>\n                                            </Fragment>}\n                                            {app.shortlisted === true && app.accepted === false && <Fragment>\n                                                {parseInt(job.job.maxap.position) > aprofile.applications.filter(app => app.accepted === true).length ? (\n                                                    <Link onClick={() => acceptApplication(match.params.id, aprofile._id)} className=\"btn btn-warning m-1\">Accept</Link>\n                                                ) : (\n                                                        <Link onClick={() => setAlert('No more positions left for this job', 'danger')} className=\"btn btn-warning m-1\">Accept</Link>\n                                                    )}\n                                                <Link onClick={() => rejectApplication(match.params.id, aprofile._id)} className=\"btn btn-danger m-1\">Reject</Link>\n                                            </Fragment>}\n                                            {app.shortlisted === false && app.accepted === true && <Fragment>\n                                                <Link className=\"btn btn-info m-1\">Accepted</Link>\n                                            </Fragment>}\n                                        </Fragment>)}\n                                    </div>\n                                </Fragment>\n                            ))}\n                        </Fragment>\n                    ) : (\n                            <Fragment>\n                                <h2>No Applicants</h2>\n                            </Fragment>\n                        )}\n                </Fragment>\n            )}\n        </Fragment>\n    )\n};\n\nJobApplicants.propTypes = {\n    getProfilesByJobId: PropTypes.func.isRequired,\n    getJobById: PropTypes.func.isRequired,\n    setAlert: PropTypes.func.isRequired,\n    rejectApplication: PropTypes.func.isRequired,\n    shortlistApplication: PropTypes.func.isRequired,\n    acceptApplication: PropTypes.func.isRequired,\n    aprofile: PropTypes.object.isRequired,\n    job: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    aprofile: state.aprofile,\n    job: state.job\n});\n\nexport default connect(mapStateToProps, { getProfilesByJobId, getJobById, setAlert, rejectApplication, shortlistApplication, acceptApplication })(JobApplicants);\n","/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/recruiter/SortFeatureApplicant.js",[],"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/recruiter/SelectedApplicants.js",["207"],"import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getAcceptedProfileByRec } from '../../actions/aprofile';\nimport { getMadeJobs } from '../../actions/job';\nimport Spinner from '../layout/Spinner';\n\nconst SelectedApplicants = ({ getAcceptedProfileByRec, getMadeJobs, job, aprofile }) => {\n    useEffect(() => {\n        getAcceptedProfileByRec();\n        getMadeJobs();\n    }, []);\n    return (\n        <Fragment>\n            {job.loading || aprofile.loading ? <Spinner /> : (<Fragment>\n                {job.jobs.length > 0 ? (\n                    <Fragment>\n                        {aprofile.aprofiles.length > 0 ? (\n                            <Fragment>\n                                <h1>Selected Applicants</h1>\n                                {aprofile.aprofiles.map(aprofile => (\n                                    <Fragment>\n                                        <div className=\"container bg-light m-1 border border-success\">\n                                            <h3>{aprofile.user.name}</h3>\n                                            {job.jobs.map(job => aprofile.applications.filter(app => app.job === job._id && app.accepted === true).length > 0 && <Fragment>\n                                                <p className=\"m-0\">{job.title}</p>\n                                                <p className=\"m-0\">{job.typeofjob}</p>\n                                                {aprofile.applications.map(app => app.job === job._id && app.selected && <Fragment>\n                                                    <p className=\"m-0\">{app.dateofjoining}</p>\n                                                </Fragment>)}\n                                            </Fragment>)}\n                                            <Link className=\"btn btn-info m-1\">Rate the Applicant</Link>\n                                        </div>\n                                    </Fragment>\n                                ))}\n                            </Fragment>\n                        ) : (\n                                <Fragment>\n                                    <h1>No Selected Applicants</h1>\n                                </Fragment>\n                            )}\n                    </Fragment>\n                ) : (\n                        <Fragment>\n                            <h1>No Jobs Made</h1>\n                        </Fragment>\n                    )}\n            </Fragment>)}\n        </Fragment>\n    )\n};\n\nSelectedApplicants.propTypes = {\n    getAcceptedProfileByRec: PropTypes.func.isRequired,\n    getMadeJobs: PropTypes.func.isRequired,\n    job: PropTypes.object.isRequired,\n    aprofile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    job: state.job,\n    aprofile: state.aprofile\n});\n\nexport default connect(mapStateToProps, { getAcceptedProfileByRec, getMadeJobs })(SelectedApplicants);\n",{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","severity":1,"message":"213","line":8,"column":1,"nodeType":"214","endLine":22,"endColumn":2},{"ruleId":"212","severity":1,"message":"213","line":18,"column":1,"nodeType":"214","endLine":55,"endColumn":2},{"ruleId":"212","severity":1,"message":"215","line":5,"column":1,"nodeType":"214","endLine":13,"endColumn":3},{"ruleId":"216","severity":1,"message":"217","line":11,"column":8,"nodeType":"218","endLine":11,"endColumn":10,"suggestions":"219"},{"ruleId":"216","severity":1,"message":"217","line":12,"column":8,"nodeType":"218","endLine":12,"endColumn":10,"suggestions":"220"},{"ruleId":"212","severity":1,"message":"213","line":13,"column":1,"nodeType":"214","endLine":41,"endColumn":2},{"ruleId":"212","severity":1,"message":"213","line":16,"column":1,"nodeType":"214","endLine":73,"endColumn":2},{"ruleId":"221","severity":1,"message":"222","line":45,"column":49,"nodeType":"223","messageId":"224","endLine":45,"endColumn":58},{"ruleId":"208","replacedBy":"225"},{"ruleId":"210","replacedBy":"226"},{"ruleId":"216","severity":1,"message":"227","line":16,"column":8,"nodeType":"218","endLine":16,"endColumn":10,"suggestions":"228"},{"ruleId":"216","severity":1,"message":"229","line":19,"column":8,"nodeType":"218","endLine":19,"endColumn":36,"suggestions":"230"},{"ruleId":"212","severity":1,"message":"213","line":21,"column":1,"nodeType":"214","endLine":122,"endColumn":2},{"ruleId":"221","severity":1,"message":"222","line":56,"column":39,"nodeType":"223","messageId":"224","endLine":56,"endColumn":48},{"ruleId":"216","severity":1,"message":"231","line":11,"column":8,"nodeType":"218","endLine":11,"endColumn":10,"suggestions":"232"},{"ruleId":"216","severity":1,"message":"233","line":12,"column":8,"nodeType":"218","endLine":12,"endColumn":10,"suggestions":"234"},{"ruleId":"235","severity":1,"message":"236","line":3,"column":10,"nodeType":"237","messageId":"238","endLine":3,"endColumn":14},{"ruleId":"216","severity":1,"message":"239","line":16,"column":8,"nodeType":"218","endLine":16,"endColumn":10,"suggestions":"240"},{"ruleId":"216","severity":1,"message":"241","line":13,"column":8,"nodeType":"218","endLine":13,"endColumn":10,"suggestions":"242"},"no-native-reassign",["243"],"no-negated-in-lhs",["244"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","Assign arrow function to a variable before exporting as module default","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["245"],["246"],"array-callback-return","Array.prototype.sort() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd",["243"],["244"],"React Hook useEffect has a missing dependency: 'getJobs'. Either include it or remove the dependency array. If 'getJobs' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["247"],"React Hook useEffect has a missing dependency: 'aprofile.skills'. Either include it or remove the dependency array. If 'setFormData' needs the current value of 'aprofile.skills', you can also switch to useReducer instead of useState and read 'aprofile.skills' in the reducer.",["248"],"React Hook useEffect has a missing dependency: 'getAppliedJobs'. Either include it or remove the dependency array. If 'getAppliedJobs' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["249"],"React Hook useEffect has a missing dependency: 'getMadeJobs'. Either include it or remove the dependency array. If 'getMadeJobs' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["250"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'getJobById', 'getProfilesByJobId', and 'match.params.id'. Either include them or remove the dependency array. If 'getProfilesByJobId' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["251"],"React Hook useEffect has missing dependencies: 'getAcceptedProfileByRec' and 'getMadeJobs'. Either include them or remove the dependency array. If 'getAcceptedProfileByRec' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["252"],"no-global-assign","no-unsafe-negation",{"desc":"253","fix":"254"},{"desc":"253","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"268","text":"269"},{"range":"270","text":"269"},"Update the dependencies array to be: [getJobs]",{"range":"271","text":"272"},"Update the dependencies array to be: [loading, getCurrentProfile, aprofile.skills]",{"range":"273","text":"274"},"Update the dependencies array to be: [getAppliedJobs]",{"range":"275","text":"276"},"Update the dependencies array to be: [getMadeJobs]",{"range":"277","text":"278"},"Update the dependencies array to be: [getJobById, getProfilesByJobId, match.params.id]",{"range":"279","text":"280"},"Update the dependencies array to be: [getAcceptedProfileByRec, getMadeJobs]",{"range":"281","text":"282"},[424,426],"[getCurrentProfile]",[459,461],[637,639],"[getJobs]",[624,652],"[loading, getCurrentProfile, aprofile.skills]",[408,410],"[getAppliedJobs]",[437,439],"[getMadeJobs]",[812,814],"[getJobById, getProfilesByJobId, match.params.id]",[502,504],"[getAcceptedProfileByRec, getMadeJobs]"]