{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/applicant/JobListing.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\nimport { getJobs } from '../../actions/job';\nimport Spinner from '../layout/Spinner';\n\nconst JobListing = ({\n  getJobs,\n  job: {\n    jobs,\n    loading\n  }\n}) => {\n  _s();\n\n  useEffect(() => {\n    getJobs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Job Listing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), jobs.length > 0 ? /*#__PURE__*/_jsxDEV(Fragment, {\n      children: jobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"job-title\",\n          children: job.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: job.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Rating : \", job.rating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Salary : \", job.salary]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: job.duration === '0' ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Indefinite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 57\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: job.duration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 85\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Deadline : \", /*#__PURE__*/_jsxDEV(Moment, {\n            format: \"YYYY/MM/DD\",\n            children: job.deadline\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No Jobs Available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(JobListing, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = JobListing;\nJobListing.propTypes = {\n  getJobs: PropTypes.func.isRequired,\n  job: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  job: state.job\n});\n\nexport default connect(mapStateToProps, {\n  getJobs\n})(JobListing);\n\nvar _c;\n\n$RefreshReg$(_c, \"JobListing\");","map":{"version":3,"sources":["/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/applicant/JobListing.js"],"names":["React","useEffect","Fragment","PropTypes","connect","Moment","getJobs","Spinner","JobListing","job","jobs","loading","length","map","title","name","rating","salary","duration","deadline","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEF,EAAAA,OAAF;AAAWG,EAAAA,GAAG,EAAE;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR;AAAhB,CAAD,KAAyC;AAAA;;AACxDV,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,OAAO;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA,sBAEI,QAAC,QAAD;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKI,IAAI,CAACE,MAAL,GAAc,CAAd,gBACG,QAAC,QAAD;AAAA,gBACKF,IAAI,CAACG,GAAL,CAASJ,GAAG,iBACT;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,WAAd;AAAA,oBAA2BA,GAAG,CAACK;AAA/B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAIL,GAAG,CAACM;AAAR;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,kCAAaN,GAAG,CAACO,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA,kCAAaP,GAAG,CAACQ,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAA,oBAAIR,GAAG,CAACS,QAAJ,KAAiB,GAAjB,gBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAxB,gBAAoD;AAAA,sBAAOT,GAAG,CAACS;AAAX;AAAA;AAAA;AAAA;AAAA;AAAxD;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAA,iDAAc,QAAC,MAAD;AAAQ,YAAA,MAAM,EAAC,YAAf;AAAA,sBAA6BT,GAAG,CAACU;AAAjC;AAAA;AAAA;AAAA;AAAA,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADH,gBAcO,QAAC,QAAD;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAhBZ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAwBH,CA7BD;;GAAMX,U;;KAAAA,U;AA+BNA,UAAU,CAACY,SAAX,GAAuB;AACnBd,EAAAA,OAAO,EAAEH,SAAS,CAACkB,IAAV,CAAeC,UADL;AAEnBb,EAAAA,GAAG,EAAEN,SAAS,CAACoB,MAAV,CAAiBD;AAFH,CAAvB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BhB,EAAAA,GAAG,EAAEgB,KAAK,CAAChB;AADmB,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CAACoB,eAAD,EAAkB;AAAElB,EAAAA;AAAF,CAAlB,CAAP,CAAsCE,UAAtC,CAAf","sourcesContent":["import React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\nimport { getJobs } from '../../actions/job';\nimport Spinner from '../layout/Spinner';\n\nconst JobListing = ({ getJobs, job: { jobs, loading } }) => {\n    useEffect(() => {\n        getJobs();\n    }, []);\n\n    return (\n\n        <Fragment>\n            <h1>Job Listing</h1>\n            {jobs.length > 0 ? (\n                <Fragment>\n                    {jobs.map(job => (\n                        <div className=\"container\">\n                            <h3 className=\"job-title\">{job.title}</h3>\n                            <p>{job.name}</p>\n                            <p>Rating : {job.rating}</p>\n                            <p>Salary : {job.salary}</p>\n                            <p>{job.duration === '0' ? (<span>Indefinite</span>) : (<span>{job.duration}</span>)}</p>\n                            <p>Deadline : <Moment format=\"YYYY/MM/DD\">{job.deadline}</Moment></p>\n                        </div>\n                    ))}\n                </Fragment>\n            ) : (\n                    <Fragment>\n                        <h2>No Jobs Available</h2>\n                    </Fragment>\n                )}\n        </Fragment>\n    )\n};\n\nJobListing.propTypes = {\n    getJobs: PropTypes.func.isRequired,\n    job: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    job: state.job\n});\n\nexport default connect(mapStateToProps, { getJobs })(JobListing);\n"]},"metadata":{},"sourceType":"module"}