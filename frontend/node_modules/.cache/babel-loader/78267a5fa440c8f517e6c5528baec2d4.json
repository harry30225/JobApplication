{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/applicant/MyApplications.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\nimport { getAppliedJobs } from '../../actions/job';\nimport Spinner from '../layout/Spinner';\n\nconst MyApplications = ({\n  getAppliedJobs,\n  job: {\n    jobs,\n    loading\n  },\n  aprofile: {\n    aprofile\n  }\n}) => {\n  _s();\n\n  useEffect(() => {\n    getAppliedJobs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Applications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this), jobs.length > 0 ? /*#__PURE__*/_jsxDEV(Fragment, {\n        children: jobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container bg-light m-1 border border-success\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"job-title\",\n            children: job.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"m-0\",\n            children: [\"Recruiter Name : \", job.user.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"m-0\",\n            children: [\"Rating : \", job.rating]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"m-0\",\n            children: [\"Salary : \", job.salary]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"m-0\",\n            children: [\" Duration : \", job.duration === '0' ? /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Indefinite\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 93\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: job.duration\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 121\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"m-0\",\n            children: [\"Deadline : \", /*#__PURE__*/_jsxDEV(Moment, {\n              format: \"YYYY/MM/DD\",\n              children: job.deadline\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 67\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 37\n          }, this), aprofile.applications.map(app => app.job === job._id && /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [app.rejected === false && app.shortlisted === false && app.accepted === false && /*#__PURE__*/_jsxDEV(Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"m-0\",\n                children: \"Status : Pending\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 123\n            }, this), app.rejected === true && app.shortlisted === false && app.accepted === false && /*#__PURE__*/_jsxDEV(Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"m-0\",\n                children: \"Status : Rejected\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 122\n            }, this), app.rejected === false && app.shortlisted === true && app.accepted === false && /*#__PURE__*/_jsxDEV(Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"m-0\",\n                children: \"Status : Shortlisted\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 122\n            }, this), app.rejected === false && app.shortlisted === false && app.accepted === true && /*#__PURE__*/_jsxDEV(Fragment, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 122\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"m-0\",\n              children: \"Status : Accepted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Date of Joining : \", /*#__PURE__*/_jsxDEV(Moment, {\n                format: \"YYYY/MM/DD\",\n                children: app.dateofjoining\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 62\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 94\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"No Applied Jobs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MyApplications, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = MyApplications;\nMyApplications.propTypes = {\n  getAppliedJobs: PropTypes.func.isRequired,\n  job: PropTypes.object.isRequired,\n  aprofile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  job: state.job,\n  aprofile: state.aprofile\n});\n\nexport default connect(mapStateToProps, {\n  getAppliedJobs\n})(MyApplications);\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApplications\");","map":{"version":3,"sources":["/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/applicant/MyApplications.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Moment","getAppliedJobs","Spinner","MyApplications","job","jobs","loading","aprofile","length","map","title","user","name","rating","salary","duration","deadline","applications","app","_id","rejected","shortlisted","accepted","dateofjoining","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\nimport { getAppliedJobs } from '../../actions/job';\nimport Spinner from '../layout/Spinner';\n\nconst MyApplications = ({ getAppliedJobs, job: { jobs, loading }, aprofile: { aprofile } }) => {\n    useEffect(() => {\n        getAppliedJobs();\n    }, []);\n    return (\n        <Fragment>\n            {loading ? <Spinner /> : (\n                <Fragment>\n                    <h1 >My Applications</h1>\n                    {jobs.length > 0 ? (\n                        <Fragment>\n                            {jobs.map(job => (\n                                <div className=\"container bg-light m-1 border border-success\">\n                                    <h3 className=\"job-title\">{job.title}</h3>\n                                    <p className=\"m-0\">Recruiter Name : {job.user.name}</p>\n                                    <p className=\"m-0\">Rating : {job.rating}</p>\n                                    <p className=\"m-0\">Salary : {job.salary}</p>\n                                    <p className=\"m-0\"> Duration : {job.duration === '0' ? (<span>Indefinite</span>) : (<span>{job.duration}</span>)}</p>\n                                    <p className=\"m-0\">Deadline : <Moment format=\"YYYY/MM/DD\">{job.deadline}</Moment></p>\n                                    {aprofile.applications.map(app => app.job === job._id && <Fragment>\n                                        {app.rejected === false && app.shortlisted === false && app.accepted === false && <Fragment>\n                                            <p className=\"m-0\">Status : Pending</p>\n                                        </Fragment>}\n                                        {app.rejected === true && app.shortlisted === false && app.accepted === false && <Fragment>\n                                            <p className=\"m-0\">Status : Rejected</p>\n                                        </Fragment>}\n                                        {app.rejected === false && app.shortlisted === true && app.accepted === false && <Fragment>\n                                            <p className=\"m-0\">Status : Shortlisted</p>\n                                        </Fragment>}\n                                        {app.rejected === false && app.shortlisted === false && app.accepted === true && <Fragment></Fragment>}\n                                        <p className=\"m-0\">Status : Accepted</p>\n                                        <p>Date of Joining : <Moment format=\"YYYY/MM/DD\">{app.dateofjoining}</Moment></p>\n                                        {/* Rate the Job */}\n                                    </Fragment>)}\n                                </div>\n                            ))}\n                        </Fragment>\n                    ) : (\n                            <Fragment>\n                                <h2>No Applied Jobs</h2>\n                            </Fragment>\n                        )}\n                </Fragment>\n            )}\n        </Fragment>\n    )\n};\n\nMyApplications.propTypes = {\n    getAppliedJobs: PropTypes.func.isRequired,\n    job: PropTypes.object.isRequired,\n    aprofile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    job: state.job,\n    aprofile: state.aprofile\n});\n\nexport default connect(mapStateToProps, { getAppliedJobs })(MyApplications);\n"]},"metadata":{},"sourceType":"module"}