{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/applicant/JobListing.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { getJobs } from '../../actions/job';\nimport Spinner from '../layout/Spinner';\nimport SearchFeature from '../layout/SearchFeature';\nimport SortFeature from '../layout/SortFeature';\nimport FilterFeature from '../layout/FilterFeature';\n\nconst JobListing = ({\n  getJobs,\n  job: {\n    loading,\n    jobs\n  },\n  aprofile: {\n    aprofile\n  }\n}) => {\n  _s();\n\n  useEffect(() => {\n    getJobs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        onClick: getJobs,\n        to: \"/job-listing\",\n        className: \"btn btn-primary m-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-tag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 99\n        }, this), \" Job Listing\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Job Listing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(SearchFeature, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(SortFeature, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(FilterFeature, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this), jobs.length > 0 ? /*#__PURE__*/_jsxDEV(Fragment, {\n        children: jobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container bg-light m-1 border border-success\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"job-title\",\n            children: job.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"m-0\",\n            children: [\"Recruiter Name : \", job.user.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"m-0\",\n            children: [\"Rating : \", job.rating]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"m-0\",\n            children: [\"Salary : \", job.salary]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"m-0\",\n            children: [\" Duration : \", job.duration === '0' ? /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Indefinite\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 97\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: job.duration\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 125\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"m-0\",\n            children: [\"Deadline : \", /*#__PURE__*/_jsxDEV(Moment, {\n              format: \"YYYY/MM/DD\",\n              children: job.deadline\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 71\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 41\n          }, this), parseInt(job.maxap.application) <= job.applications.length || parseInt(job.maxap.position) <= job.selected.length ? /*#__PURE__*/_jsxDEV(Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              className: \"btn btn-danger m-1\",\n              children: \"Full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 45\n          }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n            children: aprofile.applications.findIndex(app => app.job === job._id) === -1 ? /*#__PURE__*/_jsxDEV(Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/apply-job/${job._id}`,\n                className: \"btn btn-primary m-1\",\n                children: \" Apply\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 61\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 57\n            }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                className: \"btn btn-warning m-1\",\n                children: \"Applied\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 65\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 61\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 49\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 37\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"No Jobs Available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(JobListing, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = JobListing;\nJobListing.propTypes = {\n  getJobs: PropTypes.func.isRequired,\n  job: PropTypes.object.isRequired,\n  aprofile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  job: state.job,\n  aprofile: state.aprofile\n});\n\nexport default connect(mapStateToProps, {\n  getJobs\n})(JobListing);\n\nvar _c;\n\n$RefreshReg$(_c, \"JobListing\");","map":{"version":3,"sources":["/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/applicant/JobListing.js"],"names":["React","useEffect","Fragment","PropTypes","connect","Link","Moment","getJobs","Spinner","SearchFeature","SortFeature","FilterFeature","JobListing","job","loading","jobs","aprofile","length","map","title","user","name","rating","salary","duration","deadline","parseInt","maxap","application","applications","position","selected","findIndex","app","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { getJobs } from '../../actions/job';\nimport Spinner from '../layout/Spinner';\nimport SearchFeature from '../layout/SearchFeature';\nimport SortFeature from '../layout/SortFeature';\nimport FilterFeature from '../layout/FilterFeature';\n\nconst JobListing = ({ getJobs, job: { loading, jobs }, aprofile: { aprofile } }) => {\n    useEffect(() => {\n        getJobs();\n    }, []);\n\n    return (\n        <Fragment>\n            {loading ? (\n                <Fragment>\n                    <Spinner />\n                </Fragment>\n            ) : (\n                    <Fragment>\n                        <Link onClick={getJobs} to='/job-listing' className=\"btn btn-primary m-2\"><i className=\"fa fa-tag\"></i> Job Listing</Link>\n                        <h1>Job Listing</h1>\n                        <SearchFeature />\n                        <SortFeature />\n                        <FilterFeature />\n                        {jobs.length > 0 ? (\n                            <Fragment>\n                                {jobs.map(job => (\n                                    <div className=\"container bg-light m-1 border border-success\">\n                                        <h3 className=\"job-title\">{job.title}</h3>\n                                        <p className=\"m-0\">Recruiter Name : {job.user.name}</p>\n                                        <p className=\"m-0\">Rating : {job.rating}</p>\n                                        <p className=\"m-0\">Salary : {job.salary}</p>\n                                        <p className=\"m-0\"> Duration : {job.duration === '0' ? (<span>Indefinite</span>) : (<span>{job.duration}</span>)}</p>\n                                        <p className=\"m-0\">Deadline : <Moment format=\"YYYY/MM/DD\">{job.deadline}</Moment></p>\n                                        {parseInt(job.maxap.application) <= job.applications.length || parseInt(job.maxap.position) <= job.selected.length ? (\n                                            <Fragment>\n                                                <Link className=\"btn btn-danger m-1\">Full</Link>\n                                            </Fragment>\n                                        ) : (\n                                                <Fragment>\n                                                    {aprofile.applications.findIndex(app => app.job === job._id) === -1 ? (\n                                                        <Fragment>\n                                                            <Link to={`/apply-job/${job._id}`} className=\"btn btn-primary m-1\"> Apply</Link>\n                                                        </Fragment>\n                                                    ) : (\n                                                            <Fragment>\n                                                                <Link className=\"btn btn-warning m-1\">Applied</Link>\n                                                            </Fragment>\n                                                        )}\n                                                </Fragment>\n                                            )}\n                                    </div>\n                                ))}\n                            </Fragment>\n                        ) : (\n                                <Fragment>\n                                    <h2>No Jobs Available</h2>\n                                </Fragment>\n                            )}\n                    </Fragment>\n                )\n            }\n        </Fragment>\n\n    )\n};\n\nJobListing.propTypes = {\n    getJobs: PropTypes.func.isRequired,\n    job: PropTypes.object.isRequired,\n    aprofile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    job: state.job,\n    aprofile: state.aprofile\n});\n\nexport default connect(mapStateToProps, { getJobs })(JobListing);\n"]},"metadata":{},"sourceType":"module"}