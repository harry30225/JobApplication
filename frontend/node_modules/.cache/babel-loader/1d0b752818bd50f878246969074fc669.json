{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/recruiter/RecJobListing.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getMadeJobs, deleteJob } from '../../actions/job';\nimport Moment from 'react-moment';\nimport Spinner from '../layout/Spinner';\n\nconst RecJobListing = ({\n  getMadeJobs,\n  deleteJob,\n  job: {\n    jobs,\n    loading\n  }\n}) => {\n  _s();\n\n  useEffect(() => {\n    getMadeJobs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Jobs and Applications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this), jobs.length > 0 ? /*#__PURE__*/_jsxDEV(Fragment, {\n        children: jobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container bg-light m-1 border border-success\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/job-applicants/${job._id}`,\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"job-title\",\n              children: job.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 77\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"m-0\",\n            children: [\"Salary : \", job.salary]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"m-0\",\n            children: [\"Date of Posting : \", /*#__PURE__*/_jsxDEV(Moment, {\n              format: \"YYYY/MM/DD\",\n              children: job.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 74\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"m-0\",\n            children: [\" Duration : \", job.duration === '0' ? /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Indefinite\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 93\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [job.duration, \" Month\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 121\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"m-0\",\n            children: [\"Deadline : \", /*#__PURE__*/_jsxDEV(Moment, {\n              format: \"YYYY/MM/DD\",\n              children: job.deadline\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 67\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"m-0\",\n            children: [\"Number of Applicants : \", job.applications.filter(app => app.reject === false).length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"m-0\",\n            children: [\"Maximum of Applications : \", job.maxap.application]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/edit-job/${job._id}`,\n            className: \"btn btn-info m-1\",\n            children: \"Edit job\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            onClick: () => deleteJob(job._id),\n            className: \"btn btn-danger m-1\",\n            children: \"Delete Job\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"No Applied Jobs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RecJobListing, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = RecJobListing;\nRecJobListing.propTypes = {\n  getMadeJobs: PropTypes.func.isRequired,\n  deleteJob: PropTypes.func.isRequired,\n  job: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  job: state.job\n});\n\nexport default connect(mapStateToProps, {\n  getMadeJobs,\n  deleteJob\n})(RecJobListing);\n\nvar _c;\n\n$RefreshReg$(_c, \"RecJobListing\");","map":{"version":3,"sources":["/home/harry30225/Downloads/sem 4 stuff/dass/2019101083/frontend/src/components/recruiter/RecJobListing.js"],"names":["React","useEffect","Fragment","PropTypes","connect","Link","getMadeJobs","deleteJob","Moment","Spinner","RecJobListing","job","jobs","loading","length","map","_id","title","salary","date","duration","deadline","applications","filter","app","reject","maxap","application","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getMadeJobs, deleteJob } from '../../actions/job';\nimport Moment from 'react-moment';\nimport Spinner from '../layout/Spinner';\n\nconst RecJobListing = ({ getMadeJobs, deleteJob, job: { jobs, loading } }) => {\n    useEffect(() => {\n        getMadeJobs();\n    }, []);\n    return (\n        <Fragment>\n            {loading ? <Spinner /> : (\n                <Fragment>\n                    <h1 >Jobs and Applications</h1>\n                    {jobs.length > 0 ? (\n                        <Fragment>\n                            {jobs.map(job => (\n                                <div className=\"container bg-light m-1 border border-success\">\n                                    <Link to={`/job-applicants/${job._id}`}><h3 className=\"job-title\">{job.title}</h3></Link>\n                                    <p className=\"m-0\">Salary : {job.salary}</p>\n                                    <p className=\"m-0\">Date of Posting : <Moment format=\"YYYY/MM/DD\">{job.date}</Moment></p>\n                                    <p className=\"m-0\"> Duration : {job.duration === '0' ? (<span>Indefinite</span>) : (<span>{job.duration} Month</span>)}</p>\n                                    <p className=\"m-0\">Deadline : <Moment format=\"YYYY/MM/DD\">{job.deadline}</Moment></p>\n                                    <p className=\"m-0\">Number of Applicants : {job.applications.filter(app => app.reject === false).length}</p>\n                                    <p className=\"m-0\">Maximum of Applications : {job.maxap.application}</p>\n                                    <Link to={`/edit-job/${job._id}`} className=\"btn btn-info m-1\">Edit job</Link>\n                                    <Link onClick={() => deleteJob(job._id)} className=\"btn btn-danger m-1\">Delete Job</Link>\n                                </div>\n                            ))}\n                        </Fragment>\n                    ) : (\n                            <Fragment>\n                                <h2>No Applied Jobs</h2>\n                            </Fragment>\n                        )}\n                </Fragment>\n            )}\n        </Fragment>\n    )\n};\n\nRecJobListing.propTypes = {\n    getMadeJobs: PropTypes.func.isRequired,\n    deleteJob: PropTypes.func.isRequired,\n    job: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    job: state.job\n});\n\nexport default connect(mapStateToProps, { getMadeJobs, deleteJob })(RecJobListing);\n"]},"metadata":{},"sourceType":"module"}